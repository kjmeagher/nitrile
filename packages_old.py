class symbol:
    def __init__(self,c = u"\N{REPLACEMENT CHARACTER}",**kwargs):
        self.c = c
        self.kwargs = kwargs

class combining:
    def __init__(self,c = u"\N{REPLACEMENT CHARACTER}"):
        self.c = c

class map:
    def __init__(self,m = None):
        self.m = m
        

unsupported =  symbol()
notimplmented = symbol()
notimplemented = symbol()
notsupported = symbol()

class LaTeX2e:
    all_commands = {
        #Table 1: LATEX 2e Escapable "Special" Characters
        "$" : symbol(u"$"),
        "%" : symbol(u"%"),
        "_" : symbol(u"_"),
        "}" : symbol(u"}"),
        "&" : symbol(u"&"),
        "#" : symbol(u"#"),
        "{" : symbol(u"{"),


        #Table 3: LATEX 2e Commands Defined to Work in Both Math and Text Mode
        "P"         : symbol(u"\N{PILCROW SIGN}"),
        "S"         : symbol(u"\N{SECTION SIGN}"),
        "copyright" : symbol(u"\N{COPYRIGHT SIGN}"),
        "dag"       : symbol(u"\N{DAGGER}"),
        "ddag"      : symbol(u"\N{DOUBLE DAGGER}"),
        "dots"      : symbol(u"\N{HORIZONTAL ELLIPSIS}"),
        "pounds"    : symbol(u"\N{POUND SIGN}"),

        #Table 5: Non-ASCII Letters (Excluding Accented Letters)
        "aa" : symbol(u"\N{LATIN SMALL LETTER A WITH RING ABOVE}"),
        "AA" : symbol(u"\N{LATIN CAPITAL LETTER A WITH RING ABOVE}"),
        "AE" : symbol(u"\N{LATIN CAPITAL LETTER AE}"),
        "ae" : symbol(u"\N{LATIN SMALL LETTER AE}"),
        #"DH" : symbol(u"\N{LATIN CAPITAL LETTER ETH}"),
        #"dh" : symbol(u"\N{LATIN SMALL LETTER ETH}"),
        #"DJ" : symbol(u"\N{LATIN CAPITAL LETTER D WITH STROKE}"),
        #"dj" : symbol(u"\N{LATIN SMALL LETTER D WITH STROKE}"),
        "L"  : symbol(u"\N{LATIN CAPITAL LETTER L WITH STROKE}"),
        "l"  : symbol(u"\N{LATIN SMALL LETTER L WITH STROKE}"),
        #"NG" : symbol(u"\N{LATIN CAPITAL LETTER ENG}"),
        #"ng" : symbol(u"\N{LATIN SMALL LETTER ENG}"),
        "o"  : symbol(u"\N{LATIN SMALL LETTER O WITH STROKE}"),
        "O"  : symbol(u"\N{LATIN CAPITAL LETTER O WITH STROKE}"),
        "OE" : symbol(u"\N{LATIN CAPITAL LIGATURE OE}"),
        "oe" : symbol(u"\N{LATIN SMALL LIGATURE OE}"),
        "ss" : symbol(u"\N{LATIN SMALL LETTER SHARP S}"),
        "SS" : symbol(u"\N{LATIN CAPITAL LETTER SHARP S}"),
        #"TH" : symbol(u"\N{LATIN CAPITAL LETTER THORN}"),
        #"th" : symbol(u"\N{LATIN SMALL LETTER THORN}"),        
        }

    text_commands = {
        #Table 2: Predefined LATEX 2e Text-mode Commands
        "textasciicircum" : symbol(u"^"),
        "textasciitilde"  : symbol(u"~"),
        "textasteriskcentered" : symbol(u"*"),
        "textbackslash" : symbol(u"\\"),
        "textbar" : symbol(u"|"),
        "textbraceleft" : symbol(u"{"),
        "textbraceright" : symbol(u"}"),
        "textbullet" : symbol(u"\N{BULLET}"),
        "textcopyright" : symbol(u"\N{COPYRIGHT SIGN}"),
        "textdagger" : symbol(u"\N{DAGGER}"),
        "textdaggerdbl" : symbol(u"\N{DOUBLE DAGGER}"),
        "textdollar" : symbol(u"$"),
        "textellipsis" : symbol(u"\N{HORIZONTAL ELLIPSIS}"),
        "textemdash" : symbol(u"\N{EM DASH}"),
        "textendash" : symbol(u"\N{EN DASH}"),
        "textexclamdown" : symbol(u"\N{INVERTED EXCLAMATION MARK}"),
        "textgreater" : symbol(u">"),
        "textless" : symbol(u"<"),
        "textordfeminine" : symbol(u"\N{FEMININE ORDINAL INDICATOR}"),
        "textordmasculine" : symbol(u"\N{MASCULINE ORDINAL INDICATOR}"),
        "textparagraph" : symbol(u"\N{PILCROW SIGN}"),
        "textperiodcentered" : symbol(u"\N{MIDDLE DOT}"),
        "textquestiondown" : symbol(u"\N{INVERTED QUESTION MARK}"),
        "textquotedblleft" : symbol(u"\N{LEFT DOUBLE QUOTATION MARK}"),
        "textquotedblright" : symbol(u"\N{RIGHT DOUBLE QUOTATION MARK}"),
        "textquoteleft" : symbol(u"\N{LEFT SINGLE QUOTATION MARK}"),
        "textquoteright" : symbol(u"\N{RIGHT SINGLE QUOTATION MARK}"),
        "textregistered" : symbol(u"\N{REGISTERED SIGN}"),
        "textsection" : symbol(u"\N{SECTION SIGN}"),
        "textsterling" : symbol(u"\N{POUND SIGN}"),
        "texttrademark" : symbol(u"\N{TRADE MARK SIGN}"),
        "textunderscore" : symbol(u"_"),
        "textvisiblespace" : symbol(u"\N{OPEN BOX}"),

        #Table 17: Text-mode Accents
        '"' : combining("\N{COMBINING DIAERESIS}"),
        "'" : combining("\N{COMBINING ACUTE ACCENT}"),
        "." : combining("\N{COMBINING DOT ABOVE}"),
        "=" : combining("\N{COMBINING MACRON}"),
        "^" : combining("\N{COMBINING CIRCUMFLEX ACCENT}"),
        "`" : combining("\N{COMBINING GRAVE ACCENT}"),
        #"|" : combining("\N{COMBINING VERTICAL LINE ABOVE}"),#fc package
        "~" : combining("\N{COMBINING TILDE}"),
        "b" : combining("\N{COMBINING MACRON BELOW}"),
        "c" : combining("\N{COMBINING CEDILLA}"),
        "d" : combining("\N{COMBINING DOT BELOW}"),
        #"G" : combining("\N{COMBINING DOUBLE GRAVE ACCENT}"),#fc package
       # "h" : combining("\N{COMBINING HOOK ABOVE}"),#vntx package
        "H" : combining("\N{COMBINING DOUBLE ACUTE ACCENT}"),        
        #"k" : combining("\N{Combining Ogonek}"),#fontenc package

        "r" : combining("\N{COMBINING RING ABOVE}"),
        "t" : combining("\N{COMBINING DOUBLE INVERTED BREVE}"),
        "u" : combining("\N{COMBINING DOUBLE INVERTED BREVE}"),
        #"U" : notimplemented,
        "v" : combining("\N{COMBINING CARON}"),
        "textcircled" : combining("\N{COMBINING ENCLOSING CIRCLE}"),
        }

    math_commands = {
        #Table 42: Math-Mode Versions of Text Symbols
        "mathdollar"     : symbol(u"$"),
        "mathellipsis"   : symbol(u"\N{HORIZONTAL ELLIPSIS}"),
        "mathparagraph"  : symbol(u"\N{PILCROW SIGN}"),
        "mathsection"    : symbol(u"\N{SECTION SIGN}"),
        "mathsterling"   : symbol(u"\N{POUND SIGN}"),
        "mathunderscore" : symbol(u"_"),

        #Table 44: Binary Operators

        "amalg"          : symbol(u"\N{AMALGAMATION OR COPRODUCT}"),
        "ast"            : symbol(u"*"),
        "bigcirc"        : symbol(u"\N{WHITE CIRCLE}"),
        "bigtriangledown": symbol(u"\N{WHITE DOWN-POINTING TRIANGLE}"),
        "bigtriangleup"  : symbol(u"\N{WHITE UP-POINTING TRIANGLE}"),
        "bullet"         : symbol(u"\N{BULLET OPERATOR}"),
        "cap"            : symbol(u"\N{INTERSECTION}"),
        "cdot"           : symbol(u"\N{DOT OPERATOR}"),
        "circ"           : symbol(u"\N{RING OPERATOR}"),
        "cup"            : symbol(u"\N{UNION}"),
        "dagger"         : symbol(u"\N{DAGGER}"),
        "ddagger"        : symbol(u"\N{DOUBLE DAGGER}"),
        "diamond"        : symbol(u"\N{DIAMOND OPERATOR}"),
        "div"            :  symbol(u"\N{DIVISION SIGN}"),
        #"lhd"           : symbol(u"\N{}"),
        "mp"             : symbol(u"\N{MINUS-OR-PLUS SIGN}"),
        "odot"           : symbol(u"\N{CIRCLED DOT OPERATOR}"),
        "ominus"         : symbol(u"\N{CIRCLED MINUS}"),
        "oplus"          : symbol(u"\N{CIRCLED PLUS}"),
        "oslash"         : symbol(u"\N{CIRCLED DIVISION SLASH}"),
        "otimes"         : symbol(u"\N{CIRCLED TIMES}"),
        "pm"             : symbol(u"\N{PLUS-MINUS SIGN}"),
        #"rhd"           : symbol(u"\N{}"),
        "setminus"       : symbol(u"\N{SET MINUS}"),
        "sqcap"          : symbol(u"\N{SQUARE CAP}"),
        "sqcup"          : symbol(u"\N{SQUARE CUP}"),
        "star"           : symbol(u"\N{STAR OPERATOR}"),
        "times"          : symbol(u"\N{MULTIPLICATION SIGN}"),
        "triangleleft"   : symbol(u"\N{WHITE LEFT-POINTING SMALL TRIANGLE}"),
        "triangleright"  : symbol(u"\N{WHITE RIGHT-POINTING SMALL TRIANGLE}"),
        #"unlhd"         : symbol(u"\N{}"),
        #"unrhd"         : symbol(u"\N{}"),
        "uplus"          : symbol(u"\N{MULTISET UNION}"),
        "vee"            : symbol(u"\N{LOGICAL OR}"),
        "wedge"          : symbol(u"\N{LOGICAL AND}"),
        "wr"             : symbol(u"\N{WREATH PRODUCT}"),
        
        #Table 57: Variable-sized Math Operators
        "bigcap"    : symbol(u"\N{N-ARY INTERSECTION}"),
        "bigcup"    : symbol(u"\N{N-ARY UNION}"),
        "bigodot"   : symbol(u"\N{N-ARY CIRCLED DOT OPERATOR}"),
        "bigoplus"  : symbol(u"\N{N-ARY CIRCLED PLUS OPERATOR}"),
        "bigotimes" : symbol(u"\N{N-ARY CIRCLED TIMES OPERATOR}"),
        "bigsqcup"  : symbol(u"\N{N-ARY SQUARE UNION OPERATOR}"),
        "biguplus"  : symbol(u"\N{N-ARY UNION OPERATOR WITH PLUS}"),
        "bigvee"    : symbol(u"\N{N-ARY LOGICAL OR}"),
        "bigwedge"  : symbol(u"\N{N-ARY LOGICAL AND}"),
        "coprod"    : symbol(u"\N{N-ARY COPRODUCT}"),
        "int"       : symbol(u"\N{INTEGRAL}"),
        "oint"      : symbol(u"\N{CONTOUR INTEGRAL}"),
        "prod"      : symbol(u"\N{N-ARY PRODUCT}"),
        "sum"       : symbol(u"\N{N-ARY SUMMATION}"),

        #Table 85: Subset and Superset Relations
        #"sqsubset"     : symbol(u"\N{SQUARE IMAGE OF}"),
        "sqsubseteq"   : symbol(u"\N{SQUARE IMAGE OF OR EQUAL TO}"),
        #"sqsupset"     : symbol(u"\N{SQUARE ORIGINAL OF}"),
        "sqsupseteq"   : symbol(u"\N{SQUARE ORIGINAL OF OR EQUAL TO}"),
        "subset"       : symbol(u"\N{SUBSET OF}"),
        "subseteq"     : symbol(u"\N{SUBSET OF OR EQUAL TO}"),
        "supset"       : symbol(u"\N{SUPERSET OF}"),
        "supseteq"     : symbol(u"\N{SUPERSET OF OR EQUAL TO}"),

        #Table 92: Inequalities
        "geq"    : symbol(u"\N{GREATER-THAN OR EQUAL TO}"),
        "gg"     : symbol(u"\N{MUCH GREATER-THAN}"),
        "leq"    : symbol(u"\N{LESS-THAN OR EQUAL TO}"),
        "ll"     : symbol(u"\N{MUCH LESS-THAN}"),
        "neq"    : symbol(u"\N{NOT EQUAL TO}"),
        
        #Table 102: Arrows
        "Downarrow"          : symbol(u"\N{DOWNWARDS DOUBLE ARROW}"),
        "downarrow"          : symbol(u"\N{DOWNWARDS ARROW}"),
        "hookleftarrow"      : symbol(u"\N{LEFTWARDS ARROW WITH HOOK}"),
        "hookrightarrow"     : symbol(u"\N{RIGHTWARDS ARROW WITH HOOK}"),
        #"leadsto"            : symbol(u"\N{LONG RIGHTWARDS SQUIGGLE ARROW}"),
        "leftarrow"          : symbol(u"\N{LEFTWARDS ARROW}"),
        "Leftarrow"          : symbol(u"\N{LEFTWARDS DOUBLE ARROW}"),
        "Leftrightarrow"     : symbol(u"\N{LEFT RIGHT DOUBLE ARROW}"),
        "leftrightarrow"     : symbol(u"\N{LEFT RIGHT ARROW}"),
        "longleftarrow"      : symbol(u"\N{LONG LEFTWARDS ARROW}"),
        "Longleftarrow"      : symbol(u"\N{LONG LEFTWARDS DOUBLE ARROW}"),
        "longleftrightarrow" : symbol(u"\N{LONG LEFT RIGHT ARROW}"),
        "Longleftrightarrow" : symbol(u"\N{LONG LEFT RIGHT DOUBLE ARROW}"),
        "longmapsto"         : symbol(u"\N{LONG RIGHTWARDS ARROW FROM BAR}"),
        "Longrightarrow"     : symbol(u"\N{LONG RIGHTWARDS DOUBLE ARROW}"),
        "longrightarrow"     : symbol(u"\N{LONG RIGHTWARDS ARROW}"),
        "mapsto"             : symbol(u"\N{RIGHTWARDS ARROW FROM BAR}"),
        "nearrow"            : symbol(u"\N{NORTH EAST ARROW}"),
        "nwarrow"            : symbol(u"\N{NORTH WEST ARROW}"),
        "Rightarrow"         : symbol(u"\N{RIGHTWARDS DOUBLE ARROW}"),
        "rightarrow"         : symbol(u"\N{RIGHTWARDS ARROW}"),
        "searrow"            : symbol(u"\N{SOUTH EAST ARROW}"),
        "swarrow"            : symbol(u"\N{SOUTH WEST ARROW}"),
        "uparrow"            : symbol(u"\N{UPWARDS ARROW}"),
        "Uparrow"            : symbol(u"\N{UPWARDS DOUBLE ARROW}"),
        "updownarrow"        : symbol(u"\N{UP DOWN DOUBLE ARROW}"),
        "Updownarrow"        : symbol(u"\N{UP DOWN ARROW}"),

        #Table 103: Harpoons
        "leftharpoondown"   : symbol(u"\N{LEFTWARDS HARPOON WITH BARB DOWNWARDS}"),
        "leftharpoonup"     : symbol(u"\N{LEFTWARDS HARPOON WITH BARB UPWARDS}"),
        "rightharpoondown"  : symbol(u"\N{RIGHTWARDS HARPOON WITH BARB DOWNWARDS}"),
        "rightharpoonup"    : symbol(u"\N{RIGHTWARDS HARPOON WITH BARB UPWARDS}"),
        "rightleftharpoons" : symbol(u"\N{RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON}"),


        #Table 128: Log-like Symbols
        "arccos" : symbol(u"arccos"),
        "arcsin" : symbol(u"arcsin"),
        "arctan" : symbol(u"arctan"),
        "arg"    : symbol(u"arg"),
        "cos"    : symbol(u"cos"),
        "cosh"   : symbol(u"cosh"),
        "cot"    : symbol(u"cot"),
        "coth"   : symbol(u"coth"),
        "csc"    : symbol(u"csc"),
        "deg"    : symbol(u"deg"),
        "det"    : symbol(u"det"),
        "dim"    : symbol(u"dim"),
        "exp"    : symbol(u"exp"),
        "gcd"    : symbol(u"gcd"),
        "hom"    : symbol(u"hom"),
        "inf"    : symbol(u"inf"),
        "ker"    : symbol(u"ker"),
        "lg"     : symbol(u"lg"),
        "lim"    : symbol(u"lim"),
        "liminf" : symbol(u"lim inf"),
        "limsup" : symbol(u"lim sup"),
        "ln"     : symbol(u"ln"),
        "log"    : symbol(u"log"),
        "max"    : symbol(u"max"),
        "min"    : symbol(u"min"),
        "Pr"     : symbol(u"Pr"),
        "sec"    : symbol(u"sec"),
        "sin"    : symbol(u"sin"),
        "sinh"   : symbol(u"sinh"),
        "sup"    : symbol(u"sup"),
        "tan"    : symbol(u"tan"),
        "tanh"   : symbol(u"tanh"),



        #Table 131: Greek Letters
        "alpha"      : symbol(u"\N{GREEK SMALL LETTER ALPHA}"),
        "beta"       : symbol(u"\N{GREEK SMALL LETTER BETA}"),
        "gamma"      : symbol(u"\N{GREEK SMALL LETTER GAMMA}"),
        "delta"      : symbol(u"\N{GREEK SMALL LETTER DELTA}"),
        "epsilon"    : symbol(u"\N{GREEK LUNATE EPSILON SYMBOL}"),
        "varepsilon" : symbol(u"\N{LATIN SMALL LETTER OPEN E}"),
        "zeta"       : symbol(u"\N{GREEK SMALL LETTER ZETA}"),
        "eta"        : symbol(u"\N{GREEK SMALL LETTER ETA}"),
        "theta"      : symbol(u"\N{GREEK SMALL LETTER THETA}"),
        "vartheta"   : symbol(u"\N{GREEK THETA SYMBOL}"),
        "iota"       : symbol(u"\N{GREEK SMALL LETTER IOTA}"),
        "kappa"      : symbol(u"\N{GREEK SMALL LETTER KAPPA}"),
        "lambda"     : symbol(u"\N{GREEK SMALL LETTER LAMDA}"),
        "mu"         : symbol(u"\N{GREEK SMALL LETTER MU}"),
        "nu"         : symbol(u"\N{GREEK SMALL LETTER NU}"),
        "xi"         : symbol(u"\N{GREEK SMALL LETTER XI}"),
        "pi"         : symbol(u"\N{GREEK SMALL LETTER PI}"),
        "varpi"      : symbol(u"\N{GREEK PI SYMBOL}"),
        "rho"        : symbol(u"\N{GREEK SMALL LETTER RHO}"),
        "varrho"     : symbol(u"\N{GREEK RHO SYMBOL}"),
        "sigma"      : symbol(u"\N{GREEK SMALL LETTER SIGMA}"),
        "varsigma"   : symbol(u"\N{GREEK SMALL LETTER FINAL SIGMA}"),
        "tau"        : symbol(u"\N{GREEK SMALL LETTER TAU}"),
        "upsilon"    : symbol(u"\N{GREEK SMALL LETTER UPSILON}"),
        "phi"        : symbol(u"\N{GREEK PHI SYMBOL}"),
        "varphi"     : symbol(u"\N{GREEK SMALL LETTER PHI}"),
        "chi"        : symbol(u"\N{GREEK SMALL LETTER CHI}"),
        "psi"        : symbol(u"\N{GREEK SMALL LETTER PSI}"),
        "omega"      : symbol(u"\N{GREEK SMALL LETTER OMEGA}"),
        
        "Gamma"      : symbol(u"\N{GREEK CAPITAL LETTER GAMMA}"),
        "Delta"      : symbol(u"\N{GREEK CAPITAL LETTER DELTA}"),
        "Theta"      : symbol(u"\N{GREEK CAPITAL LETTER THETA}"),
        "Lambda"     : symbol(u"\N{GREEK CAPITAL LETTER LAMDA}"),
        "Xi"         : symbol(u"\N{GREEK CAPITAL LETTER XI}"),
        "Pi"         : symbol(u"\N{GREEK CAPITAL LETTER PI}"),
        "Sigma"      : symbol(u"\N{GREEK CAPITAL LETTER SIGMA}"),
        "Upsilon"    : symbol(u"\N{GREEK CAPITAL LETTER UPSILON}"),
        "Phi"        : symbol(u"\N{GREEK CAPITAL LETTER PHI}"),
        "Psi"        : symbol(u"\N{GREEK CAPITAL LETTER PSI}"),
        "Omega"      : symbol(u"\N{GREEK CAPITAL LETTER OMEGA}"),



        #Table 139: Letter-like Symbols
        "bot"    : symbol(u"\N{UP TACK}"),
        "ell"    : symbol(u"\N{SCRIPT SMALL L}"),
        "exists" : symbol(u"\N{THERE EXISTS}"),
        "forall" : symbol(u"\N{FOR ALL}"),
        "hbar"   : symbol(u"\N{PLANCK CONSTANT OVER TWO PI}"),
        "Im"     : symbol(u"\N{BLACK-LETTER CAPITAL I}"),
                
        "imath"  : symbol(u"\N{LATIN SMALL LETTER DOTLESS I}"),
        "in"     : symbol(u"\N{ELEMENT OF}"),
        "jmath"  : symbol(u"\N{LATIN SMALL LETTER DOTLESS J}"),
        "ni"     : symbol(u"\N{CONTAINS AS MEMBER}"),
        "partial": symbol(u"\N{PARTIAL DIFFERENTIAL}"),
        "Re"     : symbol(u"\N{BLACK-LETTER CAPITAL R}"),
        "top"    : symbol(u"\N{DOWN TACK}"),
        "wp"     : symbol(u"\N{SCRIPT CAPITAL P}"),


        #Table 164: Math-mode Accents
        "acute"   : combining(u"\N{COMBINING ACUTE ACCENT}"),
        "bar"     : combining(u"\N{COMBINING MACRON}"),
        "breve"   : combining(u"\N{COMBINING BREVE}"),
        "check"   : combining(u"\N{COMBINING CARON}"),
        "ddot"    : combining(u"\N{COMBINING DIAERESIS}"),
        "dot"     : combining(u"\N{COMBINING DOT ABOVE}"),
        "grave"   : combining(u"\N{COMBINING GRAVE ACCENT}"),
        "hat"     : combining(u"\N{COMBINING CIRCUMFLEX ACCENT}"),
        "mathring": combining(u"\N{COMBINING RING ABOVE}"),
        "tilde"   : combining(u"\N{COMBINING TILDE}"),
        "vec"     : combining(u"\N{Combining Right Arrow Above}"),

        #Table 169: Extensible Accents
        "widetilde"     : combining(u"\N{Combining Double Tilde}"),
        "overleftarrow" : combining(),
        "overline"      : combining(),
        "overbrace"     : combining(),
        "widehat"       : combining(u"\N{Combining Double Circumflex Above}"),
        "overrightarrow": combining(),
        "underline"     : combining(),
        "sqrt"          : combining(),

        #Table 189: Dots
        "cdotp"    : symbol(u"\N{MIDDLE DOT}"),
        "cdots"    : symbol(u"\N{MIDLINE HORIZONTAL ELLIPSIS}"),
        "colon"    : symbol(u"\N{COLON}"),
        "ddots"    : symbol(u"\N{DOWN RIGHT DIAGONAL ELLIPSIS}"),
        "ldots"    : symbol(u"\N{HORIZONTAL ELLIPSIS}"),
        "ldotp"    : symbol(u"\N{FULL STOP}"),
        "vdots"    : symbol(u"\N{Vertical Ellipsis}"),


        #Table 201: Miscellaneous LATEX 2e Math Symbols
        "aleph"      : symbol(u"\N{ALEF SYMBOL}"),
        "angle"      : symbol(u"\N{ANGLE}"),
        "backslash"  : symbol(u"\\"),
        #"Box"        : symbol(u"\N{WHITE SQUARE}"),
        "clubsuit"   : symbol(u"\N{BLACK CLUB SUIT}"),
        #"Diamond"    : symbol(u"\N{WHITE DIAMOND}"),
        "diamondsuit": symbol(u"\N{WHITE DIAMOND SUIT}"),
        "emptyset"   : symbol(u"\N{EMPTY SET}"),
        "natural"    : symbol(u"\N{MUSIC NATURAL SIGN}"),
        "heartsuit"  : symbol(u"\N{WHITE HEART SUIT}"),
        "infty"      : symbol(u"\N{INFINITY}"),
        #"mho"        : symbol(u"\N{INVERTED OHM SIGN}"),
        "nabla"      : symbol(u"\N{NABLA}"),
        "neg"        : symbol(u"\N{NOT SIGN}"),
        "prime"      : symbol(u"\N{PRIME}"),
        "sharp"      : symbol(u"\N{MUSIC SHARP SIGN}"),
        "spadesuit"  : symbol(u"\N{BLACK SPADE SUIT}"),
        "surd"       : symbol(u"\N{SQUARE ROOT}"),
        "triangle"   : symbol(u"\N{WHITE UP-POINTING TRIANGLE}"),
    }

    
class fontenc:
    all_commands = {
        #Table 5: Non-ASCII Letters (Excluding Accented Letters)
        "DH" : symbol(u"\N{LATIN CAPITAL LETTER ETH}"),
        "dh" : symbol(u"\N{LATIN SMALL LETTER ETH}"),
        "DJ" : symbol(u"\N{LATIN CAPITAL LETTER D WITH STROKE}"),
        "dj" : symbol(u"\N{LATIN SMALL LETTER D WITH STROKE}"),
        "NG" : symbol(u"\N{LATIN CAPITAL LETTER ENG}"),
        "ng" : symbol(u"\N{LATIN SMALL LETTER ENG}"),
        "TH" : symbol(u"\N{LATIN CAPITAL LETTER THORN}"),
        "th" : symbol(u"\N{LATIN SMALL LETTER THORN}"),\

        #Table 8: Punctuation Marks Not Found in OT1
        "guillemotleft" : symbol(u"\N{LEFT-POINTING DOUBLE ANGLE QUOTATION MARK}"),
        "guillemotright" : symbol(u"\N{RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK}"),
        "guilsinglleft" : symbol(u"\N{SINGLE LEFT-POINTING ANGLE QUOTATION MARK}"),
        "guilsinglright" : symbol(u"\N{SINGLE RIGHT-POINTING ANGLE QUOTATION MARK}"),
        "quotedblbase " : symbol(u"\N{QUOTATION MARK}"),
        "quotesinglbase" : symbol(u"\N{DOUBLE LOW-9 QUOTATION MARK}"),
        "textquotedbl" : symbol(u"\N{SINGLE LOW-9 QUOTATION MARK}"),
        #Table 17: Text-mode Accents
        "k" : combining("\N{Combining Ogonek}"),

 
    }


class amsmath:
    text_commands = {
        #Table 4: AMS Commands Defined to Work in Both Math and Text Mode
        "checkmark" : symbol(u"\N{CHECK MARK}"),
        "circledR" : symbol(u"\N{REGISTERED SIGN}"),
        "maltese" : symbol(u"\N{MALTESE CROSS}"),
        }

    math_commands = {
        #Table 45: AMS Binary Operators
        "barwedge"        : symbol(u"\N{PROJECTIVE}"),
        "boxdot"          : symbol(u"\N{SQUARED DOT OPERATOR}"),
        "boxminus"        : symbol(u"\N{SQUARED MINUS}"),
        "boxplus"         : symbol(u"\N{SQUARED PLUS}"),
        "boxtimes"        : symbol(u"\N{SQUARED TIMES}"),
        "Cap"             : symbol(u"\N{DOUBLE INTERSECTION}"),
        "centerdot"       : symbol(u"\N{MIDDLE DOT}"),
        "circledast"      : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "circledcirc"     : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "circleddash"     : symbol(u"\N{CIRCLED DASH}"),
        "Cup"             : symbol(u"\N{DOUBLE UNION}"),
        "curlyvee"        : symbol(u"\N{CURLY LOGICAL OR}"),
        "curlywedge"      : symbol(u"\N{CURLY LOGICAL AND}"),
        "divideontimes"   : symbol(u"\N{DIVISION TIMES}"),
        "dotplus"         : symbol(u"\N{DOT PLUS}"),
        "doublebarwedge"  : symbol(u"\N{PERSPECTIVE}"),
        "intercal"        : symbol(u"\N{INTERCALATE}"),
        "leftthreetimes"  : symbol(u"\N{LEFT SEMIDIRECT PRODUCT}"),
        "ltimes"          : symbol(u"\N{LEFT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
        "rightthreetimes" : symbol(u"\N{RIGHT SEMIDIRECT PRODUCT}"),
        "rtimes"          : symbol(u"\N{RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
        "smallsetminus"   : symbol(u"\N{SET MINUS}"),
        "veebar"          : symbol(u"\N{XOR}"),

        #Table 58: AMS Variable-sized Math Operators
        "iint"     : symbol(u"\N{DOUBLE INTEGRAL}"),
        "iiint"    : symbol(u"\N{TRIPLE INTEGRAL}"),
        "iiiint"   : symbol(u"\N{QUADRUPLE INTEGRAL OPERATOR}"),
        "idotsint" : symbol(u"\N{INTEGRAL}\{MIDLINE HORIZONTAL ELLIPSIS}\N{INTEGRAL}"),
        
        #Table 68: AMS Binary Relations
        "approxeq" : symbol(u"\N{APPROXIMATELY EQUAL TO}"),
        "backepsilon" : symbol(u"\N{GREEK REVERSED LUNATE EPSILON SYMBOL}"),
        "backsim" : symbol(u"\N{REVERSED TILDE}"),
        "backsimeq" : symbol(u"\N{REVERSED TILDE EQUALS}"),
        "because" : symbol(u"\N{BECAUSE}"),
        "between" : symbol(u"\N{BETWEEN}"),
        "Bumpeq" : symbol(u"\N{GEOMETRICALLY EQUIVALENT TO}"),
        "bumpeq" : symbol(u"\N{DIFFERENCE BETWEEN}"),
        "circeq" : symbol(u"\N{RING EQUAL TO}"),
        "curlyeqprec" : symbol(u"\N{EQUAL TO OR PRECEDES}"),
        "curlyeqsucc" : symbol(u"\N{EQUAL TO OR SUCCEEDS}"),
        "doteqdot" : symbol(u"\N{GEOMETRICALLY EQUAL TO}"),
        "eqcirc" : symbol(u"\N{RING IN EQUAL TO}"),
        "fallingdotseq" : symbol(u"\N{APPROXIMATELY EQUAL TO OR THE IMAGE OF}"),
        "multimap" : symbol(u"\N{MULTIMAP}"),
        "pitchfork" : symbol(u"\N{PITCHFORK}"),
        "precapprox" : symbol(u"\N{PRECEDES ABOVE ALMOST EQUAL TO}"),
        "preccurlyeq" : symbol(u"\N{PRECEDES OR EQUAL TO}"),
        "precsim" : symbol(u"\N{PRECEDES OR EQUIVALENT TO}"),
        "risingdotseq" : symbol(u"\N{IMAGE OF OR APPROXIMATELY EQUAL TO}"),
        "shortmid" : symbol(u"\N{DIVIDES}"),
        "shortparallel" : symbol(u"\N{PARALLEL TO}"),
        "smallfrown" : symbol(u"\N{FROWN}"),
        "smallsmile" : symbol(u"\N{SMILE}"),
        "succapprox" : symbol(u"\N{SUCCEEDS ABOVE ALMOST EQUAL TO}"),
        "succcurlyeq" : symbol(u"\N{SUCCEEDS OR EQUAL TO}"),
        "succsim" : symbol(u"\N{SUCCEEDS OR EQUIVALENT TO}"),
        "therefore" : symbol(u"\N{THEREFORE}"),
        "thickapprox" : symbol(u"\N{ALMOST EQUAL TO}"),
        "thicksim" : symbol(u"\N{TILDE OPERATOR}"),
        "varpropto" : symbol(u"\N{PROPORTIONAL TO}"),
        "Vdash" : symbol(u"\N{FORCES}"),
        "vDash" : symbol(u"\N{TRUE}"),
        "Vvdash" : symbol(u"\N{TRIPLE VERTICAL BAR RIGHT TURNSTILE}"),

        
        #Table 69: AMS Negated Binary Relations
        "ncong" : symbol(u"\N{NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO}"),
        "nmid" : symbol(u"\N{DOES NOT DIVIDE}"),
        "nparallel" : symbol(u"\N{NOT PARALLEL TO}"),
        "nprec" : symbol(u"\N{DOES NOT PRECEDE}"),
        #"npreceq" : symbol(u"\N{PRECEDES ABOVE SINGLE-LINE EQUALS SIGN with slash}"),
        "nshortmid" : symbol(u"\N{DOES NOT DIVIDE}",size = 'small'),
        "nshortparallel" : symbol(u"\N{NOT PARALLEL TO}",size = 'small'),
        "nsim" : symbol(u"\N{NOT TILDE}"),

        "nsucc" : symbol(u"\N{DOES NOT SUCCEED}"),
        #"nsucceq" : symbol(u"\N{SUCCEEDS ABOVE SINGLE-LINE EQUALS SIGN with slash}"),
        "nvDash" : symbol(u"\N{NOT TRUE}"),
        "nvdash" : symbol(u"\N{DOES NOT PROVE}"),
        "nVDash" : symbol(u"\N{NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE}"),
        "precnapprox" : symbol(u"\N{PRECEDES ABOVE NOT ALMOST EQUAL TO}"),
        "precnsim" : symbol(u"\N{PRECEDES BUT NOT EQUIVALENT TO}"),
        "succnapprox" : symbol(u"\N{SUCCEEDS BUT NOT EQUIVALENT TO}"),
        "succnsim" : symbol(u"\N{SUCCEEDS BUT NOT EQUIVALENT TO}"),


        }
class fc:
    all_commands = {
        #Table 6: Letters Used to Typeset African Languages
        "B" : map({
            "D" : symbol(u"\N{LATIN CAPITAL LETTER D WITH STROKE}"),
            "d" : symbol(u"\N{LATIN SMALL LETTER D WITH STROKE}"),
            "H" : symbol(u"\N{LATIN CAPITAL LETTER H WITH STROKE}"),
            "h" : symbol(u"\N{LATIN SMALL LETTER H WITH STROKE}"),
            "t" : symbol(u"\N{LATIN SMALL LETTER T WITH STROKE}"),
            "T" : symbol(u"\N{LATIN CAPITAL LETTER T WITH STROKE}"),
        }),
        "M" : map({
            "d" : symbol(u"\N{LATIN SMALL LETTER D WITH TAIL}"),
            "D" : symbol(u"\N{LATIN CAPITAL LETTER AFRICAN D}"),
            "E" : symbol(u"\N{LATIN CAPITAL LETTER REVERSED E}"),
            "e" : symbol(u"\N{LATIN SMALL LETTER TURNED E}"),
            "t" : symbol(u"\N{LATIN SMALL LETTER T WITH RETROFLEX HOOK}"),
            "T" : symbol(u"\N{LATIN CAPITAL LETTER T WITH RETROFLEX HOOK}"),            
        }),
        "m" : map({
            "b" : symbol(u"\N{LATIN SMALL LETTER B WITH HOOK}"),
            "B" : symbol(u"\N{LATIN CAPITAL LETTER B WITH HOOK}"),
            "C" : symbol(u"\N{LATIN CAPITAL LETTER C WITH HOOK}"),
            "c" : symbol(u"\N{LATIN SMALL LETTER C WITH HOOK}"),
            "D" : symbol(u"\N{LATIN CAPITAL LETTER D WITH HOOK}"),
            "d" : symbol(u"\N{LATIN SMALL LETTER D WITH HOOK}"),
            "E" : symbol(u"\N{LATIN CAPITAL LETTER OPEN E}"),
            "e" : symbol(u"\N{LATIN SMALL LETTER OPEN E}"),
            "f" : symbol(u"\N{LATIN SMALL LETTER F WITH HOOK}"),
            "F" : symbol(u"\N{LATIN CAPITAL LETTER F WITH HOOK}"),
            "G" : symbol(u"\N{LATIN CAPITAL LETTER GAMMA}"),
            "g" : symbol(u"\N{LATIN SMALL LETTER GAMMA}"),
            "I" : symbol(u"\N{LATIN CAPITAL LETTER IOTA}"),
            "i" : symbol(u"\N{LATIN SMALL LETTER IOTA}"),
            "J" : symbol(u"\N{LATIN CAPITAL LETTER N WITH LEFT HOOK}"),
            "j" : symbol(u"\N{LATIN SMALL LETTER N WITH LEFT HOOK}"),
            "K" : symbol(u"\N{LATIN CAPITAL LETTER K WITH HOOK}"),
            "k" : symbol(u"\N{LATIN SMALL LETTER K WITH HOOK}"),
            "N" : symbol(u"\N{LATIN CAPITAL LETTER N WITH LONG RIGHT LEG}"),
            "n" : symbol(u"\N{LATIN SMALL LETTER N WITH LONG RIGHT LEG}"),
            "o" : symbol(u"\N{LATIN SMALL LETTER OPEN O}"),
            "O" : symbol(u"\N{LATIN CAPITAL LETTER OPEN O}"),
            "P" : symbol(u"\N{LATIN CAPITAL LETTER P WITH HOOK}"),
            "p" : symbol(u"\N{LATIN SMALL LETTER P WITH HOOK}"),
            "s" : symbol(u"\N{LATIN SMALL LETTER ESH}"),
            #"S" : symbol(u"\N{}"),
            "t" : symbol(u"\N{LATIN SMALL LETTER T WITH HOOK}"),
            "T" : symbol(u"\N{LATIN CAPITAL LETTER T WITH HOOK}"),
            "u" : symbol(u"\N{LATIN SMALL LETTER V WITH HOOK}"),
            "U" : symbol(u"\N{LATIN CAPITAL LETTER V WITH HOOK}"),
            "v" : symbol(u"\N{LATIN SMALL LETTER V WITH HOOK}"),
            "V" : symbol(u"\N{LATIN CAPITAL LETTER V WITH HOOK}"),
            "Y" : symbol(u"\N{LATIN CAPITAL LETTER Y WITH HOOK}"),
            "y" : symbol(u"\N{LATIN SMALL LETTER Y WITH HOOK}"),
            "z" : symbol(u"\N{LATIN SMALL LETTER EZH}"),
            "Z" : symbol(u"\N{LATIN CAPITAL LETTER EZH}"),
        }),
        "T": map({
            "E" : symbol(u"\N{LATIN CAPITAL LETTER OPEN E}\N{Combining Tilde}"),
            "e" : symbol(u"\N{LATIN SMALL LETTER OPEN E}\N{Combining Tilde}"),        
            "o" : symbol(u"\N{LATIN SMALL LETTER OPEN O}\N{Combining Tilde}"),
            "O" : symbol(u"\N{LATIN CAPITAL LETTER OPEN O}\N{Combining Tilde}"),
        }),
        
        #Table 17: Text-mode Accents
        "|" : combining("Combining Vertical Line Above"),
        "G" : combining("\N{Combining Double Grave Accent}"),
        "U" : combining("Combining Double Vertical Line Above"),
    }


 
class vntex:
    #Table 7: Letters Used to Typeset Vietnamese
    all_commands = {
        "OHORN" : symbol(u"\N{LATIN CAPITAL LETTER O WITH HORN}"),
        "ohorn" : symbol(u"\N{LATIN SMALL LETTER O WITH HORN}"),
        "UHORN" : symbol(u"\N{LATIN CAPITAL LETTER U WITH HORN}"),
        "uhorn" : symbol(u"\N{LATIN SMALL LETTER U WITH HORN}"),
        #Table 17: Text-mode Accents
        "h" : combining("Combining Hook Above")
    }

class pifont:
    all_commnads = {
        #Table 9: pifont Decorative Punctuation Marks
        #this should be a function which returns chr(0x2700-32+ord(x))
        #"ding" : {str(i):unichr(0x26E0+i) for i in range(0x20,0x100)}
    }

class tipa:
    all_commands = {
        #Table 10: tipa Phonetic Symbols
        "textbabygamma" : symbol(u"\N{LATIN SMALL LETTER RAMS HORN}"),
        "textbarb" : unsupported,
        #"textbarc" : symbol(u"\N{LATIN SMALL LETTER C WITH BAR}"),
        "textbard" : unsupported,
        "textbardotlessj" : symbol(u"\N{Latin Small Letter Dotless J with Stroke}"),
        "textbarg" : unsupported,
        "textbarglotstop" : symbol(u"\N{Latin Letter Glottal Stop with Stroke}"),
        "textbari" : symbol(u"\N{Latin Small Letter I with Stroke}"),
        "textbarl" : symbol(u"\N{Latin Small Letter L with Bar}"),
        "textbaro" : symbol(u"\N{Latin Small Letter Barred O}"),
        "textbarrevglotstop" : symbol(u"\N{Latin Letter Reversed Glottal Stop with Stroke}"),
        "textbaru" : symbol(u"\N{Latin Small Letter U Bar}"),
        "textbeltl" : symbol(u"\N{Latin Small Letter L with Belt}"),
        "textbeta" : symbol(u"\N{Greek Small Letter Beta}"),
        "textbullseye" : symbol(u"\N{Latin Letter Bilabial Click}"),
        "textceltpal" : symbol(u"\N{ACUTE ACCENT}"),#???
        "textchi" : symbol(u"\N{Greek Small Letter Chi}"),
        "textcloseepsilon" : symbol(u"\N{Latin Small Letter Closed Open E}"),
        "textcloserevepsilon" : symbol(u"\N{Latin Small Letter Closed Reversed Open E}"),
        "textcommatailz" : symbol(u"\N{Latin Small Letter Z with Swash Tail}"),
        "textcorner" : symbol(u"\N{Top Right Corner}"),
        "textcrb" : symbol(u"\N{Latin Small Letter B with Stroke}"),
        "textcrd" : symbol(u"\N{Latin Small Letter D with Stroke}"),
        "textcrg" : symbol(u"\N{Latin Small Letter G with Stroke}"),
        "textcrh" : symbol(u"\N{Latin Small Letter H with Stroke}"),
        "textcrinvglotstop" : symbol(u"\N{Latin Letter Inverted Glottal Stop with Stroke}"),
        "textcrlambda" : symbol(u"\N{Latin Small Letter Lambda with Stroke}"),
        "textcrtwo" : symbol(u"\N{Latin Letter Two with Stroke}"),
        "textctc" : symbol(u"\N{Latin Small Letter C with Curl}"),
        "textctd" : symbol(u"\N{Latin Small Letter D with Curl}"),
        "textctdctzlig" : unsupported,
        "textctesh" : symbol(u"\N{Latin Small Letter Esh with Curl}"),
        "textctj" : symbol(u"\N{Latin Small Letter J with Crossed-Tail}"),
        "textctn" : symbol(u"\N{Latin Small Letter N with Curl}"),
        "textctt" : symbol(u"\N{Latin Small Letter T with Curl}"),
        "textcttctclig" : symbol(u"\N{Latin Small Letter Tc Digraph with Curl}"),
        "textctyogh" : symbol(u"\N{Latin Small Letter Ezh with Curl}"),
        "textctz" : symbol(u"\N{Latin Small Letter Z with Curl}"),
        "textdctzlig" : symbol(u"\N{Latin Small Letter Dz Digraph with Curl}"),
        "textdoublebaresh" :unsupported,
        "textdoublebarpipe" : symbol(u"\N{Latin Letter Alveolar Click}"),
        "textdoublebarslash" : symbol(u"\N{Not Equal To}"),
        "textdoublepipe" : symbol(u"\N{LATIN LETTER LATERAL CLICK}"),#???
        "textdoublevertline" : symbol(u"\N{DOUBLE VERTICAL LINE}"),#???
        "textdownstep" : symbol(u"\N{Modifier Letter Raised Down Arrow}"),
        "textdzlig" : symbol(u"\N{Latin Small Letter Dezh Digraph}"),
        "textepsilon" : symbol(u"\N{Greek Small Letter Epsilon}"),
        "textesh" : symbol(u"\N{Latin Small Letter Esh}"),
        "textfishhookr" : unsupported,
        "textg " : symbol(u"\N{Latin Small Letter G}"),
        "textgamma" : symbol(u"\N{Latin Small Letter Gamma}"),
        "textglobfall" : symbol(u"\N{SOUTH EAST ARROW}"),
        "textglobrise" : unsupported,
        "textglotstop" : symbol(u"\N{Latin Letter Glottal Stop}"),
        "texthalflength" : symbol(u"\N{Modifier Letter Half Triangular Colon}"),
        "texthardsign" : symbol(u"\N{Cyrillic Small Letter Hard Sign}"),
        "texthooktop" : unsupported,
        "texthtb" : symbol(u"\N{Latin Small Letter B with Hook}"),
        #"texthtbardotlessj" : symbol(u"\N{LATIN SMALL LETTER DOTLESS J BAR HOOK}"),
        "texthtbardotlessj" : unsupported,
        "texthtc" : symbol(u"\N{Latin Small Letter C with Hook}"),
        "texthtd" : symbol(u"\N{Latin Small Letter D with Hook}"),
        "texthtg" : symbol(u"\N{Latin Small Letter G with Hook}"),
        "texthth " : symbol(u"\N{Latin Small Letter H with Hook}"),
        "texththeng" : unsupported,
        "texthtk" : symbol(u"\N{Latin Small Letter K with Hook}"),
        "texthtp" : symbol(u"\N{Latin Small Letter P with Hook}"),
        "texthtq" : symbol(u"\N{Latin Small Letter Q with Hook}"),
        "texthtrtaild " : unsupported,
        "texthtscg" : symbol(u"\N{Latin Letter Small Capital G with Hook}"),
        "texthtt" : unsupported,
        "texthvlig" : unsupported,
        "textinvglotstop" : symbol(u"\N{Latin Letter Inverted Glottal Stop}"),
        "textinvscr" : symbol(u"\N{Latin Letter Small Capital Inverted R}"),
        "textiota" : symbol(u"\N{Latin Small Letter Iota}"),
        "textlambda" : symbol(u"\N{Greek Small Letter Lamda}"),
        "textlengthmark" : symbol(u"\N{MODIFIER LETTER TRIANGULAR COLON}"),
        "textlhookt" : symbol(u"\N{Latin Small Letter T with Palatal Hook}"),
        "textlhtlongi" : unsupported,
        "textlhtlongy" : symbol(u"\N{latin small letter turned h with fishhook}"),
        "textlonglegr" : symbol(u"\N{LATIN SMALL LETTER R WITH LONG LEG}"),
        "textlptr" : symbol(u"\N{Samaritan Vowel Sign Long I}"),
        "textltailm" : symbol(u"\N{Latin Small Letter M with Hook}"),
        "textltailn" : symbol(u"\N{Latin Small Letter N with Left Hook}"),
        "textltilde" : symbol(u"\N{Latin Small Letter L with Middle Tilde}"),
        "textlyoghlig" : unsupported, # l-ezh digraph?
        "textObardotlessj" : symbol(u"\N{Latin Small Letter Dotless J with Stroke}"),
        "textomega" : symbol(u"\N{Greek Small Letter Omega}"),
        "textopencorner" : symbol(u"\N{Top Left Corner}"),
        "textopeno" : symbol(u"\N{Latin Small Letter Open O}"),
        "textpalhook" : combining(u"\N{Combining Palatalized Hook Below}"),
        "textphi" : symbol(u"\N{Latin Small Letter Phi}"),
        "textprimstress" : symbol(u"\N{Devanagari Stress Sign Udatta}"),
        "textraiseglotstop" : symbol(u"\N{Modifier Letter Glottal Stop}"),
        "textraisevibyi" : unsupported,
        "textramshorns" : symbol(u"\N{Latin Small Letter Rams Horn}"),
        "textrevapostrophe" : symbol(u"\N{Single High-Reversed-9 Quotation Mark}"),
        "textreve" : symbol(u"\N{Latin Small Letter Reversed E}"),
        "textrevepsilon" : unsupported , #there is a reversed closed epsilon and a reversed lunate epsilon but not this epsilon
        "textrevglotstop" : symbol(u"\N{Latin Letter Pharyngeal Voiced Fricative}"),
        "textrevyogh" : unsupported,
        "textrhookrevepsilon" : unsupported,
        "textrhookschwa" : symbol(u"\N{Latin Small Letter Schwa with Hook}"),
        "textrhoticity" : unsupported,
        "textrptr" : symbol(u"\N{Samaritan Mark Dagesh}"),
        "textrtaild" : symbol(u"\N{Latin Small Letter D with Tail}"),
        "textrtaill" : symbol(u"\N{Latin Small Letter Schwa with Hook}"),
        "textrtailn" : symbol(u"\N{Latin Small Letter N with Retroflex Hook}"),
        "textrtailr" : symbol(u"\N{Latin Small Letter R with Tail}"),
        "textrtails" : symbol(u"\N{Latin Small Letter S with Hook}"),
        "textrtailt" : symbol(u"\N{Latin Small Letter T with Retroflex Hook}"),
        "textrtailz" : symbol(u"\N{Latin Small Letter Z with Retroflex Hook}"),
        "textrthook" : combining(u"\N{Combining Retroflex Hook Below}"),
        "textsca" : symbol(u"\N{Latin Letter Small Capital A}"),
        "textscb" : symbol(u"\N{Latin Letter Small Capital B}"),
        "textsce" : symbol(u"\N{Latin Letter Small Capital E}"),
        "textscg" : symbol(u"\N{Latin Letter Small Capital G}"),
        "textsch" : symbol(u"\N{Latin Letter Small Capital H}"),
        "textschwa" : symbol(u"\N{Latin Small Letter Schwa}"),
        "textsci" : symbol(u"\N{Latin Letter Small Capital I}"),
        "textscj" : symbol(u"\N{Latin Letter Small Capital J}"),
        "textscl" : symbol(u"\N{Latin Letter Small Capital L}"),
        "textscn" : symbol(u"\N{Latin Letter Small Capital N}"),
        "textscoelig" : symbol(u"\N{Latin Letter Small Capital Oe}"),
        #"textscomega" : symbol(u"\N{Greek Letter Small Capital Omega}"),
        "textscr" : symbol(u"\N{Latin Letter Small Capital R}"),
        "textscripta" : symbol(u"\N{Latin Small Letter Alpha}"),
        "textscriptg" : symbol(u"\N{Latin Small Letter Script G}"),
        "textscriptv" : symbol(u"\N{Latin Small Letter V with Hook}"),
        "textscu" : symbol(u"\N{Latin Letter Small Capital U}"),
        "textscy" : symbol(u"\N{Latin Letter Small Capital Y}"),
        "textsecstress" : unsupported,
        "textsoftsign" : symbol(u"\N{Cyrillic Small Letter Soft Sign}"),
        "textstretchc" : symbol(u"\N{Latin Letter Stretched C}"),
        "texttctclig" : symbol(u"\N{Latin Small Letter Tc Digraph with Curl}"),
        "textteshlig" : symbol(u"\N{Latin Small Letter Tesh Digraph}"),
        "texttheta" : symbol(u"\N{Greek Small Letter Theta}"),
        "textthorn" : symbol(u"\N{Latin Small Letter Thorn}"),
        "texttoneletterstem" : unsupported,
        "texttslig" : symbol(u"\N{Latin Small Letter Ts Digraph}"),
        "textturna" : symbol(u"\N{Latin Small Letter Turned A}"),
        "textturncelig" : unsupported,
        "textturnh" : symbol(u"\N{Latin Small Letter Turned H}"),
        "textturnk" : symbol(u"\N{Latin Small Letter Turned K}"),
        "textturnlonglegr" : symbol(u"\N{Latin Small Letter Turned R with Long Leg}"),
        "textturnm" : symbol(u"\N{Latin Small Letter Turned M}"),
        "textturnmrleg" : symbol(u"\N{Latin Small Letter Turned M with Long Leg}"),
        "textturnr" : symbol(u"\N{Latin Small Letter Turned R}"),
        "textturnrrtail" : symbol(u"\N{Latin Small Letter Turned R with Hook}"),
        "textturnscripta" : symbol(u"\N{Latin Small Letter Turned Alpha}"),
        "textturnt" : symbol(u"\N{Latin Small Letter Turned T}"),
        "textturnv" : symbol(u"\N{Latin Small Letter Turned V}"),
        "textturnw" : symbol(u"\N{Latin Small Letter Turned W}"),
        "textturny" : symbol(u"\N{Latin Small Letter Turned Y}"),
        "textupsilon" : symbol(u"\N{Latin Small Letter Upsilon}"),
        "textupstep" : symbol(u"\N{Modifier Letter Raised Up Arrow}"),
        "textvertline" : symbol(u"\N{Vertical Line}"),
        "textvibyi" : unsupported,
        "textvibyy" : unsupported,
        "textvibyy" : symbol(u"\N{Latin Small Letter Turned H with Fishhook and Tail}"),
        "textwynn" : symbol(u"\N{Latin Letter Wynn}"),
        "textyogh" : symbol(u"\N{Latin Capital Letter Yogh}"),

        #Table 18: tipa Text-mode Accents
        "textacutemacron"      : combining(u"\N{Combining Macron}\N{Combining Acute Accent}"),
        "textacutewedge"       : combining(u"\N{Combining Caron}\N{Combining Acute Accent}"),
        "textadvancing"        : combining(u"\N{Combining Left Tack Below}"),
        "textbottomtiebar"     : combining(u"\N{Combining Double Breve Below}"),
        "textbrevemacron"      : combining(u"\N{Combining Macron}\N{Combining Breve}"),
        "textcircumacute"      : combining(u"\N{Combining Grave-Acute-Grave}"),
        "textcircumdot"        : combining(u"\N{Combining Dot Above}\N{Combining Circumflex Accent}"),
        "textdotacute"         : combining(u"\N{Combining Dot Above}\N{Combining Acute Accent}"),
        "textdotbreve"         : combining(u"\N{Combining Breve}\N{Combining Dot Above}"),#Combining Candrabindu??
        "textdoublegrave"      : combining(u"\N{Combining Double Grave Accent}"),
        "textdoublevbaraccent" : combining(u""),
        "textgravecircum"      : combining(u"\N{Combining Grave-Acute-Grave}"),
        "textgravedot"         : combining(u"\N{Combining Grave Accent}\N{Combining Dot Above Right}"),
        "textgravemacron"      : combining(u"\N{Combining Macron}\N{Combining Grave Accent}"),
        "textgravemid"         : combining(u"\N{Combining Grave-Macron}"),
        "textinvsubbridge"     : combining(u"\N{Combining Inverted Bridge Below}"),
        "textlowering"         : combining(u"\N{Combining Down Tack Below}"),
        "textmidacute"         : combining(u"\N{Combining Macron-Acute}"),
        "textovercross"        : combining(u"\N{Combining X Above}"),
        "textoverw"            : combining(u"\N{Combining Latin Small Letter Flattened Open a Above}"),
        "textpolhook"          : combining(u"\N{Combining Ogonek}"),
        "textraising" : combining(u"\N{Combining Up Tack Below}"),
        "textretracting" : combining(u"\N{Combining Right Tack Below}"),
        "textringmacron" : combining(u"\N{Combining Macron}\N{Combining Ring Above}"),
        "textroundcap" : combining(u"\N{Combining Inverted Breve}"),
        "textseagull" : combining(u"\N{Combining Seagull Below}"),
        "textsubacute" : combining(u"\N{Combining Acute Accent Below}"),
        "textsubarch" : combining(),
        "textsubarch" : combining(u"\N{Combining Inverted Breve Below}"),
        "textsubbar" : combining(u"\N{Combining Macron Below}"),
        "textsubbridge" : combining(u"\N{Combining Bridge Below}"),
        "textsubcircum" : combining(u"\N{Combining Circumflex Accent Below}"),
        "textsubdot" : combining(u"\N{Combining Dot Below}"),
        "textsubgrave" : combining(u"\N{Combining Grave Accent Below}"),
        "textsublhalfring" : combining(u"\N{Combining Left Half Ring Below}"),
        "textsubplus" : combining(u"\N{Combining Plus Sign Below}"),
        "textsubrhalfring" : combining(u"\N{Combining Right Half Ring Below}"),
        "textsubring" : combining(u"\N{Combining Ring Below}"),
        "textsubsquare" : combining(u"\N{Combining Square Below}"),
        "textsubtilde" : combining(u"\N{Combining Tilde Below}"),
        "textsubumlaut" : combining(u"\N{Combining Diaeresis Below}"),
        "textsubw" : combining(u"\N{Combining Inverted Double Arch Below}"),
        "textsubwedge" : combining(u"\N{Combining Caron Below}"),
        "textsuperimposetilde" : combining(u"\N{Combining Tilde Overlay}"),
        "textsyllabic" : combining(u"\N{Combining Vertical Line Below}"),
        "texttildedot" : combining(u"\N{Combining Dot Above}\N{Combining Tilde}"),
        "texttoptiebar" : combining(u"\N{Combining Double Inverted Breve}"),
        "textvbaraccent" : combining(),
    }

class tipx:
    all_commands = {
        #Table 11: tipx Phonetic Symbols
        "textaolig" : symbol(u"\N{Latin Small Letter Ao}"),
        "textbenttailyogh" : symbol(u"\N{Latin Small Letter Ezh with Tail}"),
        "textbktailgamma" : symbol(u"\N{Greek Small Letter Gamma}\N{Combining Retroflex Hook Below}"),
        "textctinvglotstop" : unsupported,
        "textctjvar" : symbol(u"\N{Latin Small Letter J with Crossed-Tail}"),
        "textctstretchc" : unsupported,
        "textctstretchcvar" : unsupported,
        "textctturnt" : unsupported,
        "textdblig" : symbol(u"\N{Latin Small Letter Db Digraph}"),
        "textdoublebarpipevar" : symbol(u"\N{Latin Letter Alveolar Click}"),
        "textdoublepipevar" : symbol(u"\N{Latin Letter Lateral Click}"),
        "textdownfullarrow" : symbol(u"\N{Downwards Arrow}"),
        "textfemale" : symbol(u"\N{Female Sign}"),
        "textfrbarn" : unsupported,
        #"textfrhookd" : symbol(u"\N{}"),
        #"textfrhookdvar" : symbol(u"\N{}"),
        #"textfrhookt" : symbol(u"\N{}"),
        "textfrtailgamma" : symbol(u"\N{Greek Small Letter Gamma}\N{Combining Palatalized Hook Below}"),
        #"textglotstopvari" : symbol(u"\N{}"),
        #"textglotstopvarii" : symbol(u"\N{}"),
        #"textglotstopvariii" : symbol(u"\N{}"),
        "textgrgamma" : symbol(u"\N{Greek Small Letter Gamma}"),
        #"textheng" : symbol(u"\N{LATIN SMALL LETTER H WITH PALATAL HOOK}"),
        #"texthmlig" : symbol(u"\N{}"),
        "texthtbardotlessjvar" : symbol(u"\N{Latin Small Letter Dotless J with Stroke and Hook}"),
        #"textinvomega" : symbol(u"\N{}"),
        #"textinvsca" : symbol(u"\N{}"),
        #"textinvscripta" : symbol(u"\N{}"),
        #"textlfishhookrlig" : symbol(u"\N{}"),
        "textlhookfour" : symbol(u"4\N{Combining Palatalized Hook Below}"),
        "textlhookp" : symbol(u"p\N{Combining Palatalized Hook Below}"),
        #"textlhti" : symbol(u"\N{}"),
        "textlooptoprevesh" : symbol(u"\N{Latin Letter Reversed Esh Loop}"),
        "textnrleg " : symbol(u"\N{Latin Small Letter N with Long Right Leg}"),
        "textObullseye" : symbol(u"\N{Latin Letter Bilabial Click}"),
        "textpalhooklong" : combining(u"\N{Combining Palatalized Hook Below}"),
        #"textpalhookvar" : symbol(u"\N{}"),
        "textpipevar" : symbol(u"\N{Latin Letter Dental Click}"),
        "textqplig" : symbol(u"\N{Latin Small Letter Qp Digraph}"),
        "textrectangle" : symbol(u"\N{Raised Square}"),
        #"textretractingvar" : symbol(u"\N{}"),
        #"textrevscl" : symbol(u"\N{}"),
        "textrevscr" : symbol(u"\N{Latin Letter Small Capital Reversed R}"),
        "textrhooka" : symbol(u"\N{Latin Small Letter a with Retroflex Hook}"),
        "textrhooke" : symbol(u"\N{Latin Small Letter E with Retroflex Hook}"),
        "textrhookepsilon" : symbol(u"\N{Latin Small Letter Open E with Retroflex Hook}"),
        "textrhookopeno" : symbol(u"\N{Latin Small Letter Open O with Retroflex Hook}"),
        "textrtailhth" : symbol(u"\N{Latin Small Letter H with Hook}\N{Combining Retroflex Hook Below}"),
        "textrthooklong" : combining(u"\N{Combining Retroflex Hook Below}"),
        #"textscaolig" : symbol(u"\N{}"),
        #"textscdelta" : symbol(u"\N{}"),
        "textscf" : symbol(u"\N{Latin Letter Small Capital F}"),
        "textsck" : symbol(u"\N{Latin Letter Small Capital K}"),
        "textscm" : symbol(u"\N{Latin Letter Small Capital M}"),
        "textscp" : symbol(u"\N{Latin Letter Small Capital P}"),
        #"textscq" : symbol(u"\N{}"),
        "textspleftarrow" : combining(u"\N{Combining Left Arrow Above}"),
        "textstretchcvar" : symbol(u"\N{Latin Letter Stretched C}"),
        "textsubdoublearrow" : combining(u"\N{Combining Left Right Arrow Below}"),
        "textsubrightarrow" : symbol(u"\N{Combining Double Rightwards Arrow Below}"),
        #"textthornvari" : symbol(u"\N{}"),
        #"textthornvarii" : symbol(u"\N{}"),
        #"textthornvariii" : symbol(u"\N{}"),
        #"textthornvariv" : symbol(u"\N{}"),
        #"textturnsck" : symbol(u"\N{}"),
        #"textturnscu" : symbol(u"\N{}"),
        #"textturnthree" : symbol(u"\N{}"),
        #"textturntwo" : symbol(u"\N{}"),
        #"textuncrfemale" : symbol(u"\N{}"),
        "textupfullarrow" : symbol(u"\N{Upwards Arrow}"),   
    }


class wsuipa:
    all_commands = {
        "babygamma" : symbol(u"\N{Latin Small Letter Gamma}"),
        #"barb" : symbol(u"\N{}"),
        #"bard" : symbol(u"\N{}"),
        "bari" : symbol(u"\N{Latin Small Letter I with Stroke}"),
        "barl" : symbol(u"\N{Latin Small Letter L with Bar}"),
        "baro" : symbol(u"\N{Latin Small Letter Barred O}"),
        #"barp" : symbol(u"\N{}"),
        "barsci" : symbol(u"\N{Latin Small Capital Letter I with Stroke}"),
        "barscu" : symbol(u"\N{Latin Small Capital Letter U with Stroke}"),
        #"baru" : symbol(u"\N{}"),
        "clickb" : symbol(u"\N{Latin Letter Bilabial Click}"),
        "textstretchc" : symbol(u"\N{Latin Letter Stretched C}"),
        "clickt" : symbol(u"\N{Latin Small Letter Turned T}"),
        "closedniomega" : symbol(u"\N{Latin Small Letter Closed Omega}"),
        "closedrevepsilon" : symbol(u"\N{Latin Small Letter Closed Reversed Open E}"),
        "crossb" : symbol(u"\N{Latin Small Letter B with Stroke}"),
        "crossd" : symbol(u"\N{Latin Small Letter D with Stroke}"),
        "crossh" : symbol(u"\N{Latin Small Letter H with Stroke}"),
        "crossnilambda" : symbol(u"\N{Latin Small Letter Lambda with Stroke}"),
        "curlyc" : symbol(u"\N{Latin Small Letter C with Curl}"),
        "curlyesh" : symbol(u"\N{Latin Small Letter Esh with Curl}"),
        "curlyyogh" : symbol(u"\N{Latin Small Letter Ezh with Curl}"),
        "curlyz" : symbol(u"\N{Latin Small Letter Z with Curl}"),
        #"dlbari" : symbol(u"\N{}"),
        "dz" : symbol(u"\N{Latin Small Letter Dezh Digraph}"),
        #"ejective" : symbol(u"\N{}"),
        "eng" : symbol(u"\N{Latin Small Letter Eng}"),
        #"er" : symbol(u"\N{}"),
        "esh" : symbol(u"\N{Latin Small Letter Esh}"),
        "eth" : symbol(u"\N{Latin Small Letter Eth}"),
        "flapr" : symbol(u"\N{Latin Small Letter R with Fishhook}"),
        "glotstop" : symbol(u"\N{Latin Letter Glottal Stop}"),
        "hookb" : symbol(u"\N{Latin Small Letter B with Hook}"),
        "hookd" : symbol(u"\N{Latin Small Letter D with Tail}"),
        "hookg" : symbol(u"\N{Latin Small Letter G with Hook}"),
        "hookh" : symbol(u"\N{Latin Small Letter H with Hook}"),
        #"hookheng" : symbol(u"\N{}"),
        "hookrevepsilon" : symbol(u"\N{Latin Small Letter Reversed Open E with Hook}"),
        "hv" : symbol(u"\N{Latin Small Letter Hv}"),
        "inva" : symbol(u"\N{Latin Small Letter Turned A}"),
        #"invf" : symbol(u"\N{}"),
        "invglotstop" : symbol(u"\N{Latin Letter Inverted Glottal Stop}"),
        "invh" : symbol(u"\N{Latin Small Letter Turned H}"),
        "invlegr" : symbol(u"\N{Latin Small Letter Turned R with Long Leg}"),
        "invm" : symbol(u"\N{Latin Small Letter Turned M}"),
        "invr" : symbol(u"\N{Latin Small Letter Turned R}"),
        "invscr" : symbol(u"\N{Latin Letter Small Capital Turned R}"),
        "invscripta" : symbol(u"\N{Latin Small Letter Turned Alpha}"),
        "invv" : symbol(u"\N{Latin Small Letter Turned V}"),
        "invw" : symbol(u"\N{Latin Small Letter Turned W}"),
        "invy" : symbol(u"\N{Latin Small Letter Turned Y}"),
        "ipagamma" : symbol(u"\N{Latin Capital Letter Gamma}"),
        "labdentalnas" : symbol(u"\N{Latin Small Letter M with Hook}"),
        #"latfric" : symbol(u"\N{Latin Small Letter L with Retroflex Hook and Belt}"),
        "legm" : symbol(u"\N{Latin Small Letter Turned M with Long Leg}"),
        "legr" : symbol(u"\N{Latin Small Letter R with Long Leg}"),
        "lz" : symbol(u"\N{Latin Small Letter Lezh}"),
        "nialpha" : symbol(u"\N{Greek Small Letter Alpha}"),
        "nibeta" : symbol(u"\N{Greek Small Letter Beta}"),
        "nichi" : symbol(u"\N{Greek Small Letter Chi}"),
        "niepsilon" : symbol(u"\N{Greek Small Letter Epsilon}"),
        "nigamma" : symbol(u"\N{Greek Small Letter Gamma}"),
        "niiota" : symbol(u"\N{Greek Small Letter Iota}"),
        "nilambda" : symbol(u"\N{Greek Small Letter Lamda}"),
        "niomega" : symbol(u"\N{Greek Small Letter Omega}"),
        "niphi" : symbol(u"\N{Greek Phi Symbol}"),
        "nisigma" : symbol(u"\N{Greek Small Letter Sigma}"),
        "nitheta" : symbol(u"\N{Greek Small Letter Theta}"),
        "niupsilon" : symbol(u"\N{Latin Small Letter Upsilon}"),
        "nj" : symbol(u"\N{Latin Small Letter N with Left Hook}"),
        "oo" : symbol(u"\N{Latin Small Letter Oo}"),
        "openo" : symbol(u"\N{Latin Small Letter Open O}"),
        "reve" : symbol(u"\N{Latin Small Letter Reversed E}"),
        #"reveject" : symbol(u"\N{}"),
        #"revepsilon" : symbol(u"\N{}"),
        "revglotstop" : symbol(u"\N{Latin Letter Pharyngeal Voiced Fricative}"),
        "scd" : symbol(u"\N{Latin Letter Small Capital D}"),
        "scg" : symbol(u"\N{Latin Letter Small Capital G}"),
        "schwa" : symbol(u"\N{Latin Small Letter Schwa}"),
        "sci" : symbol(u"\N{Latin Letter Small Capital I}"),
        "scn" : symbol(u"\N{Latin Letter Small Capital N}"),
        "scr" : symbol(u"\N{Latin Letter Small Capital R}"),
        "scripta" : symbol(u"\N{Latin Small Letter Alpha}"),
        "scriptg" : symbol(u"\N{Latin Small Letter Script G}"),
        #"scriptv" : symbol(u"\N{}"),
        "scu" : symbol(u"\N{Latin Letter Small Capital U}"),
        "scy" : symbol(u"\N{Latin Letter Small Capital Y}"),
        #"slashb" : symbol(u"\N{}"),
        "slashc" : symbol(u"\N{Latin Small Letter C with Stroke}"),
        #"slashd" : symbol(u"\N{}"),
        #"slashu" : symbol(u"\N{}"),
        "taild" : symbol(u"\N{Latin Small Letter D with Tail}"),
        "tailinvr" : symbol(u"\N{Latin Small Letter Turned R with Hook}"),
        "taill" : symbol(u"\N{Latin Small Letter L with Retroflex Hook}"),
        "tailn" : symbol(u"\N{Latin Small Letter N with Retroflex Hook}"),
        "tailr" : symbol(u"\N{Latin Small Letter R with Tail}"),
        "tails" : symbol(u"\N{Latin Small Letter S with Hook}"),
        "tailt" : symbol(u"\N{Latin Small Letter T with Retroflex Hook}"),
        "tailz" : symbol(u"\N{Latin Small Letter Z with Palatal Hook}"),
        "tesh" : symbol(u"\N{Latin Small Letter Tesh Digraph}"),
        "thorn" : symbol(u"\N{Latin Small Letter Thorn}"),
        "tildel" : symbol(u"\N{Latin Small Letter L with Middle Tilde}"),
        "yogh" : symbol(u"\N{Latin Capital Letter Ezh}"),

        #Table 20: wsuipa Text-mode Accents
        "dental" : combining("Combining Bridge Below"),
        "underarch" :combining("Combining Inverted Breve Below}"),
    
        #Table 28: wsuipa Diacritics
        "ain" : notimplmented,
        "corner" : notimplmented,
        "downp" : notimplmented,
        "downt" : notimplmented,
        "halflength" : notimplmented,
        "leftp" : notimplmented,
        "leftt" : notimplmented,
        "length" : notimplmented,
        "midtilde" : notimplmented,
        "open" : notimplmented,
        "overring" : notimplmented,
        "polishhook" : notimplmented,
        "rightp" : notimplmented,
        "rightt" : notimplmented,
        "secstress " : notimplmented,
        "stress " : notimplmented,
        "syllabic " : notimplmented,
        "underdots " : notimplmented,
        "underring" : notimplmented,
        "undertilde" : notimplmented,
        "underwedge" : notimplmented,
        "upp" : notimplmented,
        "upt" : notimplmented,
        "diatop" : notimplmented,
        "diaunder" : notimplmented,
    }

class wasysym:
    
    text_commands = {
        #Table 13: wasysym Phonetic Symbols
        "DH " : symbol(u"\N{Latin Capital Letter Eth}"),
        "Thorn" : symbol(u"\N{Latin Capital Letter Thorn}"),
        "dh" : symbol(u"\N{Latin Small Letter Eth}"),
        "inve" : symbol(u"\N{Latin Small Letter Reversed E}"),
        "openo" : symbol(u"\N{Latin Small Letter Open O}"),
        "thorn" : symbol(u"\N{Latin Small Letter Thorn}"),

        #Table 32: wasysym Currency Symbols
        "cent" : symbol (u"\N{Cent Sign}"),
        "currency" :symbol (u"\N{Currency Sign}"),
        
        #Table 41: Miscellaneous wasysym Text-mode Symbols
        "permil" : symbol (u"\N{Per Mille Sign}"),
    }

    math_commands = {
        #Table 47: wasysym Binary Operators
        "lhd"     : symbol(u"\N{NORMAL SUBGROUP OF}"),
        "LHD"     : symbol(u"\N{Black Left-Pointing Pointer}"),
        "ocircle" : symbol(u"\N{Large Circle}"),        
        "rhd"     : symbol(u"\N{CONTAINS AS NORMAL SUBGROUP}"),
        "RHD"     : symbol(u"\N{Black Right-Pointing Pointer}"),
        "unlhd"   : symbol(u"\N{Normal Subgroup of or Equal To}"),
        "unrhd"   : symbol(u"\N{Contains As Normal Subgroup or Equal To}"),


        #Table 60: wasysym Variable-sized Math Operators
        "int"     : symbol(u"\N{INTEGRAL}"), #not definged if "integrals" is passed to package
        "iint"    : symbol(u"\N{DOUBLE INTEGRAL}"),
        "iiint"   : symbol(u"\N{TRIPLE INTEGRAL}"),
        "varint"  : symbol(u"\N{INTEGRAL}"), #not definged if "integrals" is passed to package
        "varoint" : symbol(u"\N{CONTOUR INTEGRAL}"),#not definged if "integrals" is passed to package
        "oiint"   : symbol(u"\N{SURFACE INTEGRAL}"),
        
        #Table 71: wasysym Binary Relations
        "invneg" : symbol(u"\N{Reversed Not Sign}"),
        "leadsto" : symbol(u"\N{Wave Arrow Pointing Directly Right}"),
        "wasypropto" : symbol(u"\N{PROPORTIONAL TO}"),
        "Join" : symbol(u"\N{Join}"),
        #"logof" : symbol(u"\N{}"),
    }


    
        
    

class phonetic:
    all_commands = {
        #Table 14: phonetic Phonetic Symbols
        "barj" : symbol(u"\N{Latin Small Letter Dotless J with Stroke}"),
        "barlambda" : symbol(u"\N{Latin Small Letter Lambda with Stroke}"),
        "emgma" : symbol(u"\N{Latin Small Letter M with Hook}"),
        "engma" : symbol(u"\N{Latin Small Letter N with Retroflex Hook}"),
        "enya" : symbol(u"\N{Latin Small Letter N with Left Hook}"),
        "epsi " : symbol(u"\N{Greek Small Letter Epsilon}"),
        "esh" : symbol(u"\N{Latin Small Letter Esh}"),
        "eth" : symbol(u"\N{Latin Small Letter Eth}"),
        #"fj" : symbol(u"\N{}"),
        "flap" : symbol(u"\N{Latin Small Letter R with Fishhook}"),
        "glottal" : symbol(u"\N{Latin Capital Letter Glottal Stop}"),
        "hausaB " : symbol(u"\N{Latin Capital Letter B with Hook}"),
        "hausab" : symbol(u"\N{Latin Small Letter B with Hook}"),
        "hausad" : symbol(u"\N{Latin Small Letter D with Hook}"),
        "hausaD" : symbol(u"\N{Latin Capital Letter D with Hook}"),
        "hausak" : symbol(u"\N{Latin Small Letter K with Hook}"),
        "hausaK" : symbol(u"\N{Latin Capital Letter K with Hook}"),
        "hookd" : symbol(u"\N{Latin Small Letter D with Hook}"),
        "ibar" : symbol(u"\N{Latin Small Letter I with Stroke}"),
        "openo" : symbol(u"\N{Latin Small Letter Open O}"),
        "planck" : symbol(u"\N{Latin Small Letter H with Stroke}"),
        "pwedge" : symbol(u"\N{Latin Small Letter Turned V}"),
        #"revD" : symbol(u"\N{}"),
        "riota" : symbol(u"\N{Latin Small Letter Reversed R with Fishhook}"),
        "rotm" : symbol(u"\N{Latin Capital Letter Turned M}"),
        "rotOmega" : symbol(u"\N{Latin Small Letter Upsilon}"),
        "rotr" : symbol(u"\N{Latin Small Letter Turned R}"),
        "rotvara" : symbol(u"\N{Latin Small Letter Turned Alpha}"),
        "rotw" : symbol(u"\N{Latin Small Letter Turned W}"),
        "roty" : symbol(u"\N{Latin Small Letter Turned Y}"),
        "schwa" : symbol(u"\N{Latin Small Letter Schwa}"),
        "thorn" : symbol(u"\N{Latin Small Letter Thorn}"),

        #"ubar" : symbol(u"\N{}"),
        "udesc" : symbol(u"\N{Latin Small Letter Turned H}"),
        "vara" : symbol(u"\N{Latin Small Letter Alpha}"),
        "varg" : symbol(u"\N{Latin Small Letter Script G}"),
        "vari" : symbol(u"\N{Latin Small Letter Dotless I}"),
        "varomega" : symbol(u"\N{Latin Small Letter Closed Omega}"),
        "varopeno" : symbol(u"\N{Latin Small Letter Open O}"),
        #"vod" : symbol(u"\N{}"),
        "voicedh" : symbol(u"\N{Latin Small Letter H with Hook}"),
        "yogh" : symbol(u"\N{Latin Capital Letter Ezh}"),
        }

    text_commands = {
        #Table 21: phonetic Text-mode Accents
        "hill" : combining("\N{Combining Inverted Breve Below}"),
        "od" : combining("\N{Combining Ring Below}"),
        "ohill" : combining("\N{Combining Inverted Breve}"),
        "rc" : combining("\N{Combining Ogonek}"),
        "syl" : combining("\N{Combining Vertical Line Below}"),
        "td" : combining("\N{Combining Diaeresis Below}"),
        "ut" : combining("\N{Combining Tilde Below}"),
        #"acbar" : {},
        #"acarc": {},
        #"labvel": {},
        #"upbar": {},
        #"uplett": {},
    }



class t4phonet:
    all_commands = {
        #Table 15: t4phonet Phonetic Symbols
        "textcrd" : symbol(u"\N{Latin Small Letter D with Stroke}"),    
        "textcrh" : symbol(u"\N{Latin Small Letter H with Stroke}"),
        "textepsilon" : symbol(u"\N{Greek Small Letter Epsilon}"),
        "textesh" : symbol(u"\N{Latin Small Letter Esh}"),
        "textfjlig": unsupported,
        "texthtb" : symbol(u"\N{Latin Small Letter B with Hook}"),    
        "texthtc" : symbol(u"\N{Latin Small Letter C with Hook}"),
        "texthtd" : symbol(u"\N{Latin Small Letter D with Hook}"),    
        "texthtk" : symbol(u"\N{Latin Small Letter K with Hook}"),
        "texthtp" : symbol(u"\N{Latin Small Letter P with Hook}"),
        "texthtt" : unsupported,
        "textiota" : symbol(u"\N{Latin Small Letter Iota}"),
        "textltailn" : symbol(u"\N{Latin Small Letter N with Left Hook}"),
        "textopeno" : symbol(u"\N{Latin Small Letter Open O}"),
        "textpipe" : symbol(u"\N{Latin Letter Dental Click}"),   
        "textrtaild" : symbol(u"\N{Latin Small Letter D with Tail}"),
        "textrtailt" : symbol(u"\N{Latin Small Letter T with Retroflex Hook}"),
        "textschwa" : symbol(u"\N{Latin Small Letter Schwa}"),
        "textscriptv" : symbol(u"\N{Latin Small Letter V with Hook}"),
        "textteshlig" : symbol(u"\N{Latin Small Letter Tesh Digraph}"),    
        "textyogh" : symbol(u"\N{Latin Capital Letter Yogh}"),   
    }


class semtrans:
    all_commands = {
        #Table 16: semtrans Transliteration Symbols
        #"Alif" : symbol(u"\N{}"),
        #"Ayn" : symbol(u"\N{}"),
        
        #Table 25: semtrans Accents
        "D"  : combining(u"\N{Combining Diaeresis Below}"),
        "U" : combining (u"\N{Combining Breve Below}"),
        "T" : unsupported,
    }
    
oldstyledigits = ["Basset","Bodini","Felix Tilting","Garamond","Gloucester"]

class textcomp:
    text_commands = {
        #Table 17: Text-mode Accents
        "newtie" : combining("\N{Combining Inverted Breve}"),
        
        #Table 29: textcomp Diacritics
        "textacutedbl"      : symbol(),
        "textasciiacut"     : symbol(),
        "textasciibreve "   : symbol(),
        "textasciicaron"    : symbol(),
        "textasciidieresis" : symbol(),
        "textasciigrave"    : symbol(),
        "textasciimacron"   : symbol(),
        "textgravedbl"      : symbol(),

        #Table 30: textcomp Currency Symbols
        "textbaht " : symbol(u"\N{Thai Currency Symbol Baht}"),
        "textcent" : symbol(u"\N{Cent Sign}"),
        "textcentoldstyle" : symbol(u"\N{Cent Sign}"),
        "textcolonmonetary" : symbol(u"\N{Colon Sign}"),
        "textcurrency" : symbol(u"\N{Currency Sign}"),
        "textdollar" : symbol(u"$"),
        "textdollaroldstyle" : symbol(u"$",font=['Cardo','Code2001','Code2002','Harrington']),
        "textdong" : symbol(u"\N{Dong Sign}"),
        "texteuro" : symbol(u"\N{Euro Sign}"),
        "textflorin" : symbol(u"\N{Latin Small Letter F with Hook}"),
        "textguarani" : symbol(u"\N{Guarani Sign}"),
        "textlira" : symbol(u"\N{Lira Sign}"),
        "textnaira" : symbol(u"\N{Naira Sign}"),
        "textpeso" : symbol(u"\N{Peso Sign}"),
        "textsterling" : symbol(u"\N{Pound Sign}"),
        "textwon" : symbol(u"\N{Won Sign}"),
        "textyen" : symbol(u"\N{Yen Sign}"),

        #Table 37: textcomp Legal Symbols
        "textcircledP"    : symbol(u"\N{Sound Recording Copyright}"),
        "textcopyleft"    : symbol(u"\N{Roman Numeral Reversed One Hundred}\N{Combining Enclosing Circle}"),
        "textcopyright"   : symbol(u"\N{Copyright Sign}"),
        "textregistered " : symbol(u"\N{Registered Sign}"),
        "textservicemark" : symbol(u"\N{Service Mark}"),
        "texttrademark"   : symbol(u"\N{Trade Mark Sign}"),
        
        #Table 39: textcomp Old-style Numerals
        "textzerooldstyle"  : symbol(u"0", font = oldstyledigits),
        "textoneoldstyle"   : symbol(u"1", font = oldstyledigits),
        "texttwooldstyle"   : symbol(u"2", font = oldstyledigits),
        "textthreeoldstyle" : symbol(u"3", font = oldstyledigits),
        "textfouroldstyle"  : symbol(u"4", font = oldstyledigits),
        "textfiveoldstyle"  : symbol(u"5", font = oldstyledigits),
        "textsixoldstyle"   : symbol(u"6", font = oldstyledigits),
        "textsevenoldstyle" : symbol(u"7", font = oldstyledigits),
        "texteightoldstyle" : symbol(u"8", font = oldstyledigits),
        "textnineoldstyle"  : symbol(u"9", font = oldstyledigits),
        
        #Table 40: Miscellaneous textcomp Symbols
        "textasteriskcentered" : symbol(u"\N{asterisk operator}"),
        "textbardbl" : symbol(u"\N{double vertical line}"),
        "textbigcircle" : symbol(u"\N{LARGE CIRCLE}"),
        "textblank" : symbol(u"\N{Latin Small Letter B with Stroke}"),
        "textbrokenbar" : symbol(u"\N{Broken Bar}"),
        "textbullet" : symbol(u"\N{Bullet}"),
        "textdagger" : symbol(u"\N{Dagger}"),
        "textdaggerdbl" : symbol(u"\N{Double Dagger}"),        
        "textdblhyphen" : symbol(u"\u2E40"), #\N{DOUBLE HYPHEN}
        "textdblhyphenchar" : symbol(u"\u2E40"), #\N{Double Hyphen}
        "textdiscount" : symbol(u"\N{COMMERCIAL MINUS SIGN}"),
        "textestimated" : symbol(u"\N{Estimated Symbol}"),
        "textinterrobang" : symbol(u"\N{Interrobang}"),
        "textinterrobangdown" : symbol(),
        "textmusicalnote" : symbol(u"\N{Musical Symbol Eighth Note}"),
        "textnumero" : symbol(u"\N{Numero Sign}"),
        "textopenbullet" : symbol(u"\N{Medium Small White Circle}"),
        "textordfeminine" : symbol(u"\N{Feminine Ordinal Indicator}"),
        "textordmasculine" : symbol(u"\N{Masculine Ordinal Indicator}"),
        "textparagraph" : symbol(u"\N{Pilcrow Sign}"),
        "textperiodcentered" : symbol(u"\N{Middle Dot}"),
        "textpertenthousand" : symbol(u"\N{Per Ten Thousand Sign}"),
        "textperthousand" : symbol(u"\N{Per Mille Sign}"),
        "textquotesingle" : symbol(u"\N{Pilcrow Sign}"),
        "textquotesingle" : symbol(u"\N{Apostrophe}"),
        "textquotestraightbase" : symbol(),
        "textquotestraightdblbase" : symbol(u"\N{QUOTATION MARK}"),
        "textrecipe" : symbol(u"\N{Prescription Take}"),
        "textreferencemark" : symbol(u"\N{Reference Mark}"),
        "textsection" : symbol(u"\N{Section Sign}"),
        "textthreequartersemdash" : symbol(),
        "texttildelow" : symbol(u"\N{Tilde}"),
        "texttwelveudash" : symbol(),
    }

class extraipa:
    text_commands = {
        #Table 19: extraipa Text-mode Accents
        "bibridge" : combining(u"\N{Combining Bridge Above}"),
        "crtilde" : combining(u"\N{Combining Not Tilde Above}"),
        "dottedtilde" : combining(u"\N{Combining Homothetic Above}"),
        "doubletilde" : combining(u"\N{Combining Tilde}\N{Combining Tilde}"),
        "finpartvoice" : combining(u"\N{Combining Caron Below}\N{Combining Right Half Ring Below}"),
        "finpartvoiceless" : combining(u"\N{Combining Ring Below}\N{Combining Right Half Ring Below}"),
        "inipartvoice" : combining(u"\N{Combining Left Half Ring Below}\N{Combining Caron Below}"),
        "inipartvoiceless" : combining(u"\N{Combining Left Half Ring Below}\N{Combining Ring Below}"),
        "overbridge" : combining(u"\N{Combining Bridge Above}"),
        "partvoice" : combining(u"\N{Combining Left Half Ring Below}\N{Combining Caron Below}\N{Combining Right Half Ring Below}"),
        "partvoiceless" : combining(u"\N{Combining Left Half Ring Below}\N{Combining Ring Below}\N{Combining Right Half Ring Below}"),
        "sliding" : combining(u"\N{Combining Double Rightwards Arrow Below}"),
        "spreadlips" : combining(u"\N{Combining Left Right Arrow Below}"),
        "subcorner" : combining(u"\N{Combining Left Angle Below}"),
        "subdoublebar" : combining(u"\N{Combining Equals Sign Below}"),
        "subdoublevert" : combining(u"\N{Combining Double Vertical Line Below}"),
        "sublptr" : combining(u"\N{Combining Right Arrowhead Below}"),
        "subrptr" : combining(u"\N{Combining Left Arrowhead Below}"),
        "whistle" : combining(u"\N{Combining Upwards Arrow Below}"),
    }


class metre:
    text_commands = {
        #Table 22: metre Text-mode Accents
        "acutus" : combining(u"\N{Combining Acute Accent}"),
        "breve" : combining(u"\N{Combining Breve}"),
        "circumflexus" : combining(u"\N{Combining Tilde}"),
        "diaeresis" : combining(u"\N{Combining Diaeresis}"),
        "gravis" : combining(u"\N{Combining Grave Accent}"),
        "macron" : combining(u"\N{Combining Macron}"),
    }

class t4phonet:
    text_commands = {
        #Table 23: t4phonet Text-mode Accents
        "textdoublegrave" : combining(u"\N{Combining Double Grave Accent}"),
        "textvbaraccent" : combining(u"\N{Combining Vertical Line Above}"),
        "textdoublevbaraccent" : combining(u"\N{Combining Double Vertical Line Above}"),
    }

class arcs:
    all_commands = {
        #Table 24: arcs Text-mode Accents
        "overarc" : combining(u"\N{Combining Double Inverted Breve}"),
        "underarc" : combining(u"\N{Combining Double Breve Below}"),
    }

    
class ogonek:
    all_commands = {
        #Table 26: ogonek Accents
        "k" : combining(u"\N{Combining Ogonek}"),
    }

class combelow:
    all_commands = {
        #Table 27: combelow Accents
        "cb" : notimplemented,
    }



class marvosym:
    all_commands = {
        #Table 31: marvosym Currency Symbols
        "Denarius" : symbol(u""),
        "Ecommerce" : symbol(u""),
        "EUR" : symbol(u"\N{Euro Sign}"),
        "EURcr" : symbol(u"\N{Euro Sign}",font = ["Courier"]),
        "EURdig" : symbol(u"\N{Euro Sign}"),
        "EURhv" : symbol(u"\N{Euro Sign}",font = ["Helvetica"]),
        "EURtm" : symbol(u"\N{Euro Sign}",font = ["Times Roman"]),
        "EyesDollar" : symbol(u"$",font = ["Comic Sans"]),
        "Pfund" : symbol(u"\N{L B Bar Symbol}"),
        "Shilling" : symbol(u""),
    }


class china2e:
    all_commands = {
        #Table 33: ChinA2e Currency Symbols
        "Euro" : symbol(u"\N{Euro Sign}"),
        "Pound" : symbol(u"\N{L B Bar Symbol}"),
    }

class teubner:
    all_commands = {
        #Table 34: teubner Currency Symbols
        "denarius"      : symbol(u"\N{Roman Denarius Sign}"),
        "dracma"        : symbol(u"\N{Right Tack}"),
        "hemiobelion "  : symbol(),
        "stater"        : symbol(),
        "tetartemorion" : symbol(),
    }

class eurosym:
    all_commands = {
        #Table 35: eurosym Euro Signs
        "geneuro" : symbol(u"\N{Euro Sign}"),
        "geneuronarrow" : symbol(u"\N{Euro Sign}"),
        "geneurowide" : symbol(u"\N{Euro Sign}"),
        "officialeuro" : symbol(u"\N{Euro Sign}"),
        "euro" : symbol(u"\N{Euro Sign}"),
    }

class fourier:
    all_commands = {
        #Table 36: fourier Euro Signs
        "eurologo" : symbol(u"\N{Euro Sign}"),
        "texteuro" : symbol(u"\N{Euro Sign}"),
    }

class cclicenses:
    all_commands = {
        #Table 38: cclicenses Creative Commons License Icons
        "cc" : symbol(),
        "ccby" : symbol(),
        "ccnc" : symbol(u"$\N{COMBINING ENCLOSING CIRCLE BACKSLASH}"),
        "ccnd" : symbol(u"=\N{COMBINING ENCLOSING CIRCLE}"),
        "ccsa" : symbol()
    }

class cmll:
    math_commands = {
        #Table 43: cmll Unary Operators
        "oc"    : symbol(u"!"),
        "shift" : symbol(u"\N{Up Down Arrow}"),
        "shneg" : symbol(u"\N{Upwards Arrow}"),
        "shpos" : symbol(u"\N{Downwards Arrow}"),
        "wn"    : symbol(u"?"),

        #Table 52: cmll Binary Operators
        "parr" : symbol(u"\N{Turned Ampersand}"),
        "with" : symbol(u"&"),

        #Table 66: cmll Large Math Operators
        "bigwith" : symbol(u"&"), #font?
        "bigparr" : symbol(u"\N{Turned Ampersand}"),#font?
    }
    

class stmaryrd:    
    math_commands = {
        #Table 46: stmaryrd Binary Operators
        "baro" : symbol(u"\N{CIRCLED VERTICAL BAR}"),
        "bbslash" : symbol(u"\N{OCR DOUBLE BACKSLASH}"),
        "binampersand" : symbol(u"&"), #font?
        "bindnasrepma" : symbol(u"\N{Turned Ampersand}"),#font?
        "boxast" : symbol(u"\N{SQUARED ASTERISK}"),
        #"boxbar" : symbol(u"\N{}"),
        "boxbox" : symbol(u"\N{SQUARED SQUARE}"),
        "boxbslash" : symbol(u"\N{SQUARED FALLING DIAGONAL SLASH}"),
        "boxcircle" : symbol(u"\N{SQUARED SMALL CIRCLE}"),
        "boxdot" : symbol(u"\N{SQUARED DOT OPERATOR}"),
        "boxempty" : symbol(u"\N{WHITE MEDIUM SQUARE}"),
        "boxslash" : symbol(u"\N{SQUARED RISING DIAGONAL SLASH}"),
        #"curlyveedownarrow" : symbol(u"\N{}"),
        #"curlyveeuparrow" : symbol(u"\N{}"),
        #"curlywedgedownarrow" : symbol(u"\N{}"),
        #"curlywedgeuparrow" : symbol(u"\N{}"),
        #"fatbslash" : symbol(u"\N{}"), #font?
        #"fatsemi" : symbol(u"\N{}"),   #font?
        #"fatslash" : symbol(u"\N{}"),  #font?
        "interleave" : symbol(u"\N{TRIPLE VERTICAL BAR DELIMITER}"),
        "leftslice" : symbol(u"\N{LESS-THAN CLOSED BY CURVE}"),
        "merge" : symbol(u"\N{TWO LOGICAL AND OPERATOR}"),
        "minuso" : symbol(u"\N{CIRCLED MINUS}"),
        #"moo" : symbol(u"\N{}"),
        "nplus" : symbol(u"\N{MULTISET UNION}"),
        "obar" : symbol(u"\N{CIRCLED VERTICAL BAR}"),
        "oblong" : symbol(u"\N{WHITE MEDIUM SQUARE}"),
        "obslash" : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "ogreaterthan" : symbol(u"\N{CIRCLED GREATER-THAN}"),
        "olessthan" : symbol(u"\N{CIRCLED LESS-THAN}"),
        "ovee" : symbol(u"\N{LOGICAL OR}\N{Combining Enclosing Circle}"),
        "owedge" : symbol(u"\N{LOGICAL AND}\N{Combining Enclosing Circle}"),
        "rightslice" : symbol(u"\N{GREATER-THAN CLOSED BY CURVE}"),
        "sslash" : symbol(u"\N{DOUBLE SOLIDUS OPERATOR}"),
        #"talloblong" : symbol(u"\N{}"),
        "varbigcirc" : symbol(u"\N{Large Circle}"),    #whats the deal with the var's here 
        "varcurlyvee" : symbol(u"\N{CURLY LOGICAL OR}"), #they look just like the operators in table 44
        "varcurlywedge" : symbol(u"\N{CURLY LOGICAL AND}"),
        "varoast" : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "varobar" : symbol(u"\N{CIRCLED VERTICAL BAR}"),
        "varobslash" : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "varocircle" : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "varodot" : symbol(u"\N{CIRCLED DOT OPERATOR}"),
        "varogreaterthan" : symbol(u"\N{CIRCLED GREATER-THAN}"),
        "varolessthan" : symbol(u"\N{CIRCLED LESS-THAN}"),
        "varominus" : symbol(u"\N{CIRCLED MINUS}"),
        "varoplus" : symbol(u"\N{CIRCLED PLUS}"),
        "varoslash" : symbol(u"\N{CIRCLED DIVISION SLASH}"), #CIRCLED REVERSE SOLIDUS?
        "varotimes" : symbol(u"\N{CIRCLED TIMES}"),
        "varovee" : symbol(u"\N{LOGICAL OR}\N{Combining Enclosing Circle}"),
        "varowedge" : symbol(u"\N{LOGICAL AND}\N{Combining Enclosing Circle}"),
        "vartimes" : symbol(u"\N{N-ARY TIMES OPERATOR}"),
        #"Ydown" : symbol(u"\N{}"),
        #"Yleft" : symbol(u"\N{}"),
        #"Yright" : symbol(u"\N{}"),
        #"Yup" : symbol(u"\N{}"),

        #Table 59: stmaryrd Variable-sized Math Operators
        "bigbox"          : symbol(u"\N{White Large Square}"),
        "bigcurlyvee"     : symbol(u"\N{CURLY LOGICAL OR}"),
        "bigcurlywedge"   : symbol(u"\N{CURLY LOGICAL AND}"),
        "biginterleave"   : symbol(u"\N{Triple Vertical Bar Binary Relation}"),
        "bignplus"        : symbol(),
        "bigparallel"     : symbol(u"\N{Parallel To}"),
        "bigsqcap"        : symbol(u"\N{SQUARE CAP}"),
        "bigtriangledown" : symbol(u"\N{White Down-Pointing Triangle}"),
        "bigtriangleup"   : symbol(u"\N{White Up-Pointing Triangle}"),
        

        #Table 70: stmaryrd Binary Relations
        "inplus" : symbol(u"\N{PLUS SIGN IN LEFT HALF CIRCLE}"),
        "niplus" : symbol(u"\N{PLUS SIGN IN RIGHT HALF CIRCLE}"),



        }
    
class txfonts :
    math_commands = {
        #Table 48: txfonts/pxfonts Binary Operators
        "circledbar"    : symbol(u"\N{CIRCLED VERTICAL BAR}"),
        "circledbslash" : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "circledvee"    : symbol(u"\N{LOGICAL AND}\N{Combining Enclosing Circle}"),
        "circledwedge " : symbol(u"\N{LOGICAL AND}\N{Combining Enclosing Circle}"),
        "invamp"        : symbol(u"\N{Turned Ampersand}"),
        "medbullet"     : symbol(u"\N{Medium Black Circle}"),
        "medcirc"       : symbol(u"\N{Medium White Circle}"),
        "sqcapplus"     : symbol(),
        "sqcupplus"     : symbol(),

        #Table 62: txfonts/pxfonts Variable-sized Math Operators
        #"bigsqcapplus" : symbol(u"\N{}"),
        #"bigsqcupplus" : symbol(u"\N{}"),
        "fint " : symbol(u"\N{INTEGRAL AVERAGE WITH SLASH}"),
        "idotsint" : symbol(u"\N{INTEGRAL}\N{MIDLINE HORIZONTAL ELLIPSIS}\N{INTEGRAL}"),
        "iiiint" : symbol(u"\N{QUADRUPLE INTEGRAL OPERATOR}"),        
        "iiint" : symbol(u"\N{TRIPLE INTEGRAL}"),
        "iint" : symbol(u"\N{DOUBLE INTEGRAL}"),
        #"oiiintclockwise" : symbol(u"\N{}"),
        #"oiiintctrclockwise" : symbol(u"\N{}"),
        "oiiint" : symbol(u"\N{VOLUME INTEGRAL}"),
        #"oiintclockwise" : symbol(u"\N{}"),
        #"oiintctrclockwise" : symbol(u"\N{}"),
        "oiint" : symbol(u"\N{VOLUME INTEGRAL}"),
        "ointclockwise" : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
        "ointctrclockwise" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),
        #"sqiiint" : symbol(u"\N{}"),
        #"sqiint" : symbol(u"\N{}"),
        "sqint" : symbol(u"\N{QUATERNION INTEGRAL OPERATOR}"),
        #"varoiiintctrclockwise" : symbol(u"\N{}"),
        #"varoiintclockwise" : symbol(u"\N{}"),
        #"varoiintctrclockwise" : symbol(u"\N{}"),
        "varointclockwise" : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
        "varoiintctrclockwise" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),
        "varprod" : symbol(u"\N{MULTIPLICATION SIGN}"),


        #Table 72: txfonts/pxfonts Binary Relations
        "circledgtr" : symbol(u"\N{CIRCLED GREATER-THAN}"),
        "circledless" : symbol(u"\N{CIRCLED LESS-THAN}"),
        "colonapprox " : symbol(),

        "\colonapprox" : symbol(),
        "\Colonapprox" : symbol(),
        "\coloneq" : symbol(),
        "\Coloneq" : symbol(),
        "\Coloneqq" : symbol(),
        "\coloneqq*" : symbol(),
        "\Colonsim" : symbol(),
        "\colonsim" : symbol(),
        "\Eqcolon" : symbol(),
        "\eqcolon" : symbol(),
        "\eqqcolon" : symbol(),
        "\Eqqcolon" : symbol(),
        "\eqsim" : symbol(),
        "\lJoin" : symbol(),
        "\lrtimes" : symbol(),
        "\multimap" : symbol(),
        "\multimapboth" : symbol(),
        "\multimapbothvert" : symbol(),
        "\multimapdot" : symbol(),
        "\multimapdotboth" : symbol(),
        "\multimapdotbothA" : symbol(),
        "\multimapdotbothAvert" : symbol(),
        "\multimapdotbothB" : symbol(),
        "\multimapdotbothBvert" : symbol(),
        "\multimapdotbothvert" : symbol(),
        "\multimapdotinv" : symbol(),
        "\multimapinv" : symbol(),
        "\openJoin" : symbol(),
        "\opentimes" : symbol(),
        "\Perp" : symbol(),
        "\preceqq" : symbol(),
        "\precneqq" : symbol(),
        "\rJoin" : symbol(),
        "\strictfi" : symbol(),
        "\strictif" : symbol(),
        "\strictiff" : symbol(),
        "\strictiff" : symbol(),
        "\succneqq" : symbol(),
        "\varparallel" : symbol(),
        "\varparallelinv" : symbol(),
        "\VvDash" : symbol(),


        #Table 73: txfonts/pxfonts Negated Binary Relations
        "\napproxeq" : symbol(),
        "\nasymp" : symbol(),
        "\nbacksim" : symbol(),
        "\nbacksimeq" : symbol(),
        "\nbumpeq" : symbol(),
        "\nBumpeq" : symbol(),
        "\nequiv" : symbol(),
        "\nprecapprox" : symbol(),
        "\npreccurlyeq" : symbol(),
        "\npreceqq" : symbol(),
        "\nprecsim" : symbol(),
        "\nsimeq" : symbol(),
        "\nsuccapprox" : symbol(),
        "\nsucccurlyeq" : symbol(),
        "\nsucceqq" : symbol(),
        "\nsuccsim" : symbol(),
        "\nthickapprox" : symbol(),
        "\ntwoheadleftarrow" : symbol(),
        "\ntwoheadrightarrow" : symbol(),
        "\nvarparallel" : symbol(),
        "\nvarparallelinv" : symbol(),
        "\nVdash" : symbol(),
        }
pxfonts = txfonts


class mathabx:
    math_commands  = {
        #Table 49: mathabx Binary Operators
        "ast"            : symbol(u"\N{Asterisk Operator}"),
        "Asterisk"       : symbol(u"\N{Heavy Teardrop-Spoked Asterisk}"),
        "barwedge"       : symbol(u"\N{PROJECTIVE}"),
        "bigstar"        : symbol(u"\N{BLACK STAR}"),
        #"bigvarstar"    : symbol(u"\N{Medium Six Pointed Black Star}"),
        "blackdiamond"   : symbol(u"\N{Black Small Diamond}"),
        "cap"            : symbol(u"\N{INTERSECTION}"),
        "circplus"       : symbol(u"+\N{Combining Ring Above}"),
        "coasterisk"     : symbol(u"\N{Asterisk Operator}"),
        "coAsterisk"     : symbol(u"\N{Heavy Teardrop-Spoked Asterisk}"),
        #"convolution"   : symbol(u"\N{Light Eight Spoked Asterisk}"),
        "cup"            : symbol(u"\N{UNION}"),
        "curlyvee"       : symbol(u"\N{CURLY LOGICAL OR}"),
        "curlywedge"     : symbol(u"\N{CURLY LOGICAL AND}"),
        "divdot"         : symbol(u"\N{MINUS SIGN WITH DOT BELOW}"),
        "divideontimes"  : symbol(u"\N{DIVISION TIMES}"),
        "dotdiv"         : symbol(u"-\N{Combining Dot Above}"),
        "dotplus"        : symbol(u"\N{PLUS SIGN WITH SMALL CIRCLE ABOVE}"),
        "dottimes"       : symbol(u"\N{MULTIPLICATION SIGN WITH DOT ABOVE}"),
        "doublebarwedge" : symbol(u"\N{PERSPECTIVE}"),
        "doublecap"      : symbol(u"\N{DOUBLE UNION}"),
        "doublecup"      : symbol(u"\N{DOUBLE INTERSECTION}"),
        "ltimes"         : symbol(u"\N{LEFT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
        "pluscirc"       : symbol(),
        "rtimes"         : symbol(u"\N{RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
        "sqbullet"       : symbol(u"\N{Black Small Square}"),
        "sqcap"          : symbol(u"\N{SQUARE CAP}"),
        "sqcup"          : symbol(u"\N{SQUARE CUP}"),
        "sqdoublecap"    : symbol(u"\N{DOUBLE SQUARE INTERSECTION}"),
        "sqdoublecup"    : symbol(u"\N{DOUBLE SQUARE UNION}"),
        "square"         : symbol(u"\N{White Medium Small Square}"),
        "squplus"        : symbol(),
        "udot"           : symbol(u"\N{Dot Above}"),
        "uplus"          : symbol(u"\N{N-ARY UNION OPERATOR WITH PLUS}"),
        "varstar"        : symbol(u"\N{Six Pointed Black Star}"),
        "vee"            : symbol(u"\N{Down Arrowhead}"),
        "veebar"         : symbol(u"\N{XOR}"),
        "veedoublebar"   : symbol(u"\N{LOGICAL OR WITH DOUBLE UNDERBAR}"),
        "wedge"          : symbol(u"\N{LOGICAL AND}"),

        #Table 61: mathabx Variable-sized Math Operators
        "bigcurlyvee"     : symbol(u"\N{CURLY LOGICAL OR}"),
        "bigsqcap"        : symbol(u"\N{SQUARE CAP}"),
        "bigcurlywedge"   : symbol(u"\N{CURLY LOGICAL AND}"),        
        "bigboxasterisk"  : symbol(u"\N{SQUARED ASTERISK}"),
        "bigboxbackslash" : symbol(u"\N{SQUARED FALLING DIAGONAL SLASH}"),
        "bigboxbot"       : symbol(),
        "bigboxcirc"      : symbol(u"\N{SQUARED SMALL CIRCLE}"),
        "bigboxcoasterisk": symbol(),
        "bigboxdiv"       : symbol(),
        "bigboxdot"       : symbol(u"\N{SQUARED DOT OPERATOR}"),
        "bigboxleft"      : symbol(),
        "bigboxminus"     : symbol(u"\N{SQUARED MINUS}"),
        "bigboxplus"      : symbol(u"\N{SQUARED PLUS}"),
        "bigboxright"     : symbol(),        
        "bigboxslash"     : symbol(u"\N{SQUARED RISING DIAGONAL SLASH}"),
        "bigboxtimes"     : symbol(u"\N{SQUARED TIMES}"),
        "bigboxtop"       : symbol(),
        "bigboxtriangleup": symbol(),
        "bigboxvoid"      : symbol(u"\N{WHITE MEDIUM SQUARE}"),
        "bigcomplementop" : symbol(u"\N{Latin Letter Stretched C}"),
        "bigoasterisk"    : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "bigobackslash"   : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "bigobot"         : symbol(u"\N{up Tack}\{Combining Enclosing Circle}"),
        "bigocirc"        : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "bigocoasterisk"  : symbol(),
        "bigodiv"         : symbol(u"\N{CIRCLED DIVISION SIGN}"),
        "bigodot"         : symbol(u"\N{CIRCLED DOT OPERATOR}"),
        "bigoleft"        : symbol(u"\N{Left Tack}\{Combining Enclosing Circle}"),
        "bigominus"       : symbol(u"\N{CIRCLED MINUS}"),
        "bigoright"       : symbol(u"\N{Right Tack}\{Combining Enclosing Circle}"),
        "bigoslash"       : symbol(u"\N{CIRCLED DIVISION SLASH}"),
        "bigotop"         : symbol(u"\N{Down Tack}\{Combining Enclosing Circle}"),
        "bigotriangleup"  : symbol(u"\N{White Up-Pointing Triangle}\{Combining Enclosing Circle}"),
        "bigovoid"        : symbol(u"\N{Medium White Circle}"),
        "bigplus"         : symbol(u"+"),
        "squplus"         : symbol(),
        "bigtimes"        : symbol(u"\N{MULTIPLICATION SIGN}"),
        "iiint"           : symbol(u"\N{TRIPLE INTEGRAL}"),
        "iint"            : symbol(u"\N{DOUBLE INTEGRAL}"),
        "int"             : symbol(u"\N{INTEGRAL}"), 
        "oiint"           : symbol(u"\N{SURFACE INTEGRAL}"),
        "oint"            : symbol(u"\N{CONTOUR INTEGRAL}"),


        #Table 74: mathabx Binary Relations
        "\between" : symbol(),
        "\botdoteq" : symbol(),
        "\Bumpedeq" : symbol(),
        "\bumpedeq" : symbol(),
        "\circeq" : symbol(),
        "\coloneq" : symbol(),
        "\corresponds" : symbol(),
        "\curlyeqprec" : symbol(),
        "\curlyeqsucc" : symbol(),
        "\DashV" : symbol(),
        "\Dashv" : symbol(),
        "\dashVv" : symbol(),
        "\divides" : symbol(),
        "\dotseq" : symbol(),
        "\eqbumped" : symbol(),
        "\eqcirc" : symbol(),
        "\eqcolon" : symbol(),
        "\fallingdotseq" : symbol(),
        "\ggcurly" : symbol(),
        "\llcurly" : symbol(),
        "\precapprox" : symbol(),
        "\preccurlyeq" : symbol(),
        "\precdot" : symbol(),
        "\precsim" : symbol(),
        "\precsim" : symbol(),
        "\succapprox" : symbol(),
        "\succcurlyeq" : symbol(),
        "\succdot" : symbol(),
        "\succsim" : symbol(),
        "\therefore" : symbol(),
        "\topdoteq" : symbol(),
        "\topdoteq" : symbol(),
        "\Vdash" : symbol(),
        "\VDash" : symbol(),
        "\Vvdash" : symbol(),


        #Table 75: mathabx Negated Binary Relations
        "\napprox" : symbol(),
        "\ncong" : symbol(),
        "\ncurlyeqprec" : symbol(),
        "\ncurlyeqsucc" : symbol(),
        "\nDashv" : symbol(),
        "\ndashV" : symbol(),
        "\ndashv" : symbol(),
        "\nDashV" : symbol(),
        "\ndashVv" : symbol(),
        "\neq" : symbol(),
        "\notasymp" : symbol(),
        "\notdivides" : symbol(),
        "\notequiv" : symbol(),
        "\notperp" : symbol(),
        "\nprec" : symbol(),
        "\nprecapprox" : symbol(),
        "\npreccurlyeq" : symbol(),
        "\npreceq" : symbol(),
        "\nprecsim" : symbol(),
        "\nsim" : symbol(),
        "\nsimeq" : symbol(),
        "\nsucc" : symbol(),
        "\nsuccapprox" : symbol(),
        "\nsucccurlyeq" : symbol(),
        "\nsucceq" : symbol(),
        "\nsuccsim" : symbol(),
        "\nvDash" : symbol(),
        "\nVDash" : symbol(),
        "\nVdash" : symbol(),
        "\nvdash" : symbol(),
        "\nVvash" : symbol(),
        "\precnapprox" : symbol(),
        "\precneq" : symbol(),
        "\precnsim" : symbol(),
        "\succnapprox" : symbol(),
        "\succneq" : symbol(),
        "\succnsim" : symbol(),
        }
    

class MnSymbol:
    math_commands  = {
        #Table 50: MnSymbol Binary Operators
        "amalg"            : symbol(u"\N{AMALGAMATION OR COPRODUCT}"),
        "ast"              : symbol(u"\N{ASTERISK OPERATOR}"),
        "backslashdiv"     : symbol(),
        "bowtie"           : symbol(u"\N{BOWTIE}"),
        "bullet"           : symbol(u"\N{BULLET OPERATOR}"),
        "cap"              : symbol(u"\N{INTERSECTION}"),
        "capdot"           : symbol(u"\N{INTERSECTION WITH DOT}"),
        "capplus"          : symbol(),
        "cdot"             : symbol(u"\N{DOT OPERATOR}"),
        "circ"             : symbol(u"\N{Medium Small White Circle}"),          
        "closedcurlyvee"   : symbol(),
        "closedcurlywedge" : symbol(),
        "cup"              : symbol(u"\N{UNION}"),
        "cupdot"           : symbol(u"\N{N-ARY UNION OPERATOR WITH DOT}"),
        "cupplus"          : symbol(u"\N{N-ARY UNION OPERATOR WITH PLUS}"),
        "curlyvee"         : symbol(u"\N{CURLY LOGICAL OR}"),
        "curlyveedot"      : symbol(u"\N{OR WITH DOT INSIDE}"),
        "curlywedge"       : symbol(u"\N{CURLY LOGICAL AND}"),
        "curlywedgedot"    : symbol(u"\N{AND WITH DOT}"),
        "ddotdot"          : symbol(u"\N{Dot Above}\N{Middle Dot}"),
        "diamonddots"      : symbol(u"\N{Four Dot Mark}"),
        "div"              : symbol(u"\N{DIVISION SIGN}"),
        "dotmedvert"       : symbol(u"\{}"),
        "dotminus"         : symbol(u"\N{DOT MINUS}"),
        "doublecap"        : symbol(u"\N{DOUBLE INTERSECTION}"),
        "doublecup"        : symbol(u"\N{DOUBLE UNION}"),
        "doublecurlyvee"   : symbol(),
        "doublecurlywedge" : symbol(),
        "doublesqcap"      : symbol(u"\N{DOUBLE SQUARE INTERSECTION}"),
        "doublesqcup"      : symbol(u"\N{DOUBLE SQUARE UNION}"),
        "doublevee"        : symbol(u"\N{TWO LOGICAL OR OPERATOR}"),
        "doublewedge"      : symbol(u"\N{TWO LOGICAL AND OPERATOR}"),
        "downtherefore"    : symbol(u"\N{BECAUSE}"),
        "downY"            : symbol(),
        "dtimes"           : symbol(),
        "fivedots"         : symbol(u"\N{Five Dot Mark}"),
        "hbipropto "       : symbol(u"\N{Infinity}"),
        "hdotdot"          : symbol(),
        "lefthalfcap"      : symbol(u"\N{Top Right Corner}"),      
        "lefthalfcup"      : symbol(u"\N{Bottom Left Corner}"),
        "lefttherefore"    : symbol(),
        "leftthreetimes"   : symbol(u"\N{LEFT SEMIDIRECT PRODUCT}"),
        "leftY"            : symbol(),
        "ltimes"           : symbol(u"\N{LEFT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
        "medbackslash"     : symbol(u"\N{Reverse Solidus}"),
        "medcircle"        : symbol(u"\N{Medium White Circle}"),
        "medslash"         : symbol(u"\N{Solidus}"),
        "medvert"          : symbol(u"\N{VERTICAL LINE}"),
        "medvertdot"       : symbol(),
        "minus"            : symbol(u"-"),
        "minusdot"         : symbol(u"\N{MINUS SIGN WITH DOT BELOW}"),      
        "mp"               : symbol(u"\N{MINUS-OR-PLUS SIGN}"),
        "neswbipropto"     : symbol(),
        "nwsebipropto"     : symbol(),
        "plus"             : symbol(u"+"),
        "pm"               : symbol(u"\N{PLUS-MINUS SIGN}"),
        "righthalfcap"     : symbol(u"\N{Top Right Corner}"),
        "righthalfcup"     : symbol(u"\N{Bottom Right Corner}"),
        "righttherefore"   : symbol(),
        "rightthreetimes"  : symbol(u"\N{RIGHT SEMIDIRECT PRODUCT}"),
        "rightY"           : symbol(),
        "rtimes"           : symbol(),
        "slashdiv"         : symbol(),
        "smallprod"        : symbol(u"\N{AMALGAMATION OR COPRODUCT}"),
        "sqcap"            : symbol(u"\N{SQUARE CAP}"),
        "sqcapdot"         : symbol(),
        "sqcapplus"        : symbol(),
        "sqcup"            : symbol(u"\N{SQUARE CUP}"),
        "sqcupdot"         : symbol(),
        "sqcupplus"        : symbol(),
        "squaredots"       : symbol(u"\N{Squared Four Dot Punctuation}"),
        "times"            : symbol(u"\N{MULTIPLICATION SIGN}"),
        "udotdot"          : symbol(u"\N{Middle Dot}\N{Dot Above}"),
        "uptherefore"      : symbol(u"\N{THEREFORE}"),
        "upY"              : symbol(),
        "therefore"        : symbol(),
        "vbipropto"        : symbol(),
        "vdotdot"          : symbol(u"\N{Two Dot Punctuation}"),
        "vee"              : symbol(u"\N{LOGICAL OR}"),
        "veedot"           : symbol(u"\N{OR WITH DOT INSIDE}"),
        "vertbowtie"       : symbol(u"\N{WHITE HOURGLASS}"),
        "vertdiv"          : symbol(),
        "wedge"            : symbol(u"\N{LOGICAL AND}"),
        "wedgedot"         : symbol(u"\N{AND WITH DOT}"),
        "wreath"           : symbol(u"\N{WREATH PRODUCT}"),

        "setminus" : symbol(u"\N{Reverse Solidus}"),
        "smallsetminus" : symbol(u"\N{Reverse Solidus}"),        
        "Join" : symbol(u"\N{BOWTIE}"),
        "wr" : symbol(u"\N{WREATH PRODUCT}"),
        "shortmid" : symbol(u"\N{VERTICAL LINE}"),
        #"Cap" : symbol(u"\N{doublecap}"),
        "Cup" : symbol(u"\N{DOUBLE UNION}"),
        "uplus" : symbol(u"\N{N-ARY UNION OPERATOR WITH PLUS}"),



        "boxbackslash" : symbol(u"\N{SQUARED FALLING DIAGONAL SLASH}"),
        "boxbox" : symbol(u"\N{SQUARED SQUARE}"),
        "boxdot" : symbol(u"\N{SQUARED DOT OPERATOR}"),
        "boxminus" : symbol(u"\N{SQUARED MINUS}"),
        "boxplus" : symbol(u"\N{SQUARED PLUS}"),
        "boxslash" : symbol(u"\N{SQUARED RISING DIAGONAL SLASH}"),
        "boxtimes" : symbol(u"\N{SQUARED TIMES}"),
        #"boxvert" : symbol(u"\N{}"),
        #"diamondbackslash" : symbol(u"\N{}"),
        #"diamonddiamond" : symbol(u"\N{Diamond Target}"),
        "diamonddot" : symbol(u"\N{WHITE DIAMOND WITH CENTRED DOT}"),
        #"diamondminus" : symbol(u"\N{}"),
        #"diamondplus" : symbol(u"\N{}"),
        #"diamondslash" : symbol(u"\N{}"),
        #"diamondtimes" : symbol(u"\N{}"),
        #"diamondvert" : symbol(u"\N{}"),
        "filleddiamond" : symbol(u"\N{Black Small Diamond}"),
        "filledmedsquare" : symbol(u"\N{Black Medium Square}"),
        "filledmedtriangledown" : symbol(u"\N{Black Down-Pointing Triangle}"),
        "filledmedtriangleleft" : symbol(u"\N{Black Left-Pointing Triangle}"),
        "filledmedtriangleright" : symbol(u"\N{Black Right-Pointing Triangle}"),
        "filledmedtriangleup" : symbol(u"\N{Black Up-Pointing Triangle}"),
        "filledsquare" : symbol(u"\N{Black Small Square}"),
        "filledstar" : symbol(u"\N{Black Small Star}"),
        "filledtriangledown" : symbol(u"\N{Black Down-Pointing Small Triangle}"),
        "filledtriangleleft" : symbol(u"\N{Black Left-Pointing Small Triangle}"),
        "filledtriangleright" : symbol(u"\N{Black Right-Pointing Small Triangle}"),
        "filledtriangleup" : symbol(u"\N{Black Up-Pointing Small Triangle}"),
        "meddiamond" : symbol(u"\N{White Medium Diamond}"),
        #"medsquare" : symbol(u"\N{Medium White Square}"),
        "medstar" : symbol(u"\N{White Medium Star}"),
        "medtriangledown" : symbol(u"\N{White Down-Pointing Triangle}"),
        "medtriangleleft" : symbol(u"\N{White Left-Pointing Triangle}"),
        "medtriangleright" : symbol(u"\N{White Right-Pointing Triangle}"),
        "medtriangleup" : symbol(u"\N{White Up-Pointing Triangle}"),
        "oast" : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "obackslash" : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "ocirc" : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "odot" : symbol(u"\N{CIRCLED DOT OPERATOR}"),
        "ominus" : symbol(u"\N{CIRCLED MINUS}"),
        "oplus" : symbol(u"\N{CIRCLED PLUS}"),
        "oslash" : symbol(u"\N{CIRCLED DIVISION SLASH}"),
        "ostar" : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "otimes" : symbol(u"\N{CIRCLED TIMES}"),
        "otriangle" : symbol(u"\N{Circled Triangle Down}"),
        "overt" : symbol(u"\N{CIRCLED VERTICAL BAR}"),
        #"pentagram" : symbol(u"\N{Pentagram}"),
        #"smalldiamond" : symbol(u"\N{}"),
        #"smalldiamond" : symbol(u"\N{}"),
        "smallsquare" : symbol(u"\N{White Small Square}"),
        "smalldiamond" : symbol(u"\N{White Medium Diamond}"),
        "smallstar" : symbol(u"\N{White Small Star}"),
        "smalltriangledown" : symbol(u"\N{White Down-Pointing Small Triangle}"),
        "smalltriangleleft" : symbol(u"\N{White Left-Pointing Small Triangle}"),
        "smalltriangleright" : symbol(u"\N{White Right-Pointing Small Triangle}"),
        "smalltriangleup" : symbol(u"\N{White Up-Pointing Small Triangle}"),
        #"thinstar" : symbol(u"\N{Light Five Pointed Black Star}"),
        #"upslice" : symbol(u"\N{}"),
        
        "blacksquare" : symbol(u"\N{Black Medium Square}"),
        #"square" : symbol(u"\N{Medium White Square}"),
        #"Box" : symbol(u"\N{Medium White Square}"),
        #"diamond" : symbol(u"\N{}"),
        "Diamond" : symbol(u"\N{White Medium Diamond}"),
        #"star" : symbol(u"\N{Light Five Pointed Black Star}"),
        "circledast" : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "circledcirc" : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "circleddash" : symbol(u"\N{CIRCLED MINUS}"),

        #Table 64: MnSymbol Variable-sized Math Operators
        "bigcap" : symbol(u"\N{INTERSECTION}"),
        "bigcapdot" : symbol(u"\N{INTERSECTION WITH DOT}"),
        #"bigcapplus" : symbol(u"\N{}"),
        "bigcircle" : symbol(u"\N{White Circle}"),
        "bigcup" : symbol(u"\N{UNION}"),
        "bigcupdot" : symbol(u"\N{N-ARY UNION OPERATOR WITH DOT}"),
        "bigcupplus" : symbol(u"\N{N-ARY UNION OPERATOR WITH PLUS}"),
        "bigcurlyvee" : symbol(u"\N{CURLY LOGICAL OR}"),
        #"bigcurlyveedot " : symbol(u"\N{}"),
        "bigcurlywedge" : symbol(u"\N{CURLY LOGICAL AND}"),
        #"bigdoublecurlyvee" : symbol(u"\N{}"),
        "bigdoublecurlywedge" : symbol(u"\N{TWO LOGICAL AND OPERATOR}"),
        "bigdoublevee" : symbol(u"\N{TWO LOGICAL OR OPERATOR}"),
        "bigoast" : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "bigobackslash" : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "bigocirc" : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "bigodot" : symbol(u"\N{CIRCLED DOT OPERATOR}"),
        "bigominus" : symbol(u"\N{CIRCLED MINUS}"),
        "bigoplus" : symbol(u"\N{CIRCLED PLUS}"),
        "bigoslash" : symbol(u"\N{CIRCLED DIVISION SLASH}"),
        "bigostar" : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "bigotimes" : symbol(u"\N{CIRCLED TIMES}"),
        #"bigotriangle" : symbol(u"\N{}"),
        "bigovert" : symbol(u"\N{CIRCLED VERTICAL BAR}"),
        "bigplus" : symbol(u"\N{PLUS SIGN}"),
        "bigsqcap" : symbol(u"\N{SQUARE CAP}"),
        #"bigsqcapdot" : symbol(u"\N{}"),
        #"bigsqcapplus" : symbol(u"\N{}"),
        "bigsqcup" : symbol(u"\N{SQUARE CUP}"),
        #"bigsqcupdot" : symbol(u"\N{}"),
        #"bigsqcupplus " : symbol(u"\N{}"),
        "bigtimes" : symbol(u"\N{MULTIPLICATION SIGN}"),
        "bigupplus" : symbol(u"\N{N-ARY UNION OPERATOR WITH PLUS}"),
        "bigvee" : symbol(u"\N{LOGICAL OR}"),
        #"bigveedot" : symbol(u"\N{}"),
        "bigwedge" : symbol(u"\N{LOGICAL OR}"),
        "complement" : symbol(u"\N{COMPLEMENT}"),
        "coprod" : symbol(u"\N{N-ARY COPRODUCT}"),
        "idotsint" : symbol(u"\N{INTEGRAL}\{MIDLINE HORIZONTAL ELLIPSIS}\N{INTEGRAL}"),
        "iiiint" : symbol(u"\N{QUADRUPLE INTEGRAL OPERATOR}"),        
        "iiint" : symbol(u"\N{TRIPLE INTEGRAL}"),
        "iint" : symbol(u"\N{DOUBLE INTEGRAL}"),
        "int" : symbol(u"\N{INTEGRAL}"),
        "landdownint" : symbol(u"\N{INTEGRAL WITH UNION}"),
        "landupint" : symbol(u"\N{INTEGRAL WITH INTERSECTION}"),
        "lcircleleftint" : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
        "lcirclerightint" : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
        "oiint" : symbol(u"\N{VOLUME INTEGRAL}"),
        "oint" : symbol(u"\N{CONTOUR INTEGRAL}"),
        "prod" : symbol(u"\N{N-ARY PRODUCT}"),
        "rcircleleftint" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),
        "rcirclerightint" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),
        "strokedint" : symbol(u"\N{INTEGRAL AVERAGE WITH SLASH}"),
        "sum" : symbol(u"\N{N-ARY SUMMATION}"),
        "sumint" : symbol(u"\N{SUMMATION WITH INTEGRAL}"),



    }


class mathdesign:
        math_commands = {
            #Table 51: mathdesign Binary Operators
            "dtimes"  : symbol(),
            "udtimes" : symbol(u"\N{WHITE HOURGLASS}"),
            "utimes"  : symbol(),

            #the rest copid from amsmath
            "barwedge"        : symbol(u"\N{PROJECTIVE}"),
            "boxdot"          : symbol(u"\N{SQUARED DOT OPERATOR}"),
            "boxminus"        : symbol(u"\N{SQUARED MINUS}"),
            "boxplus"         : symbol(u"\N{SQUARED PLUS}"),
            "boxtimes"        : symbol(u"\N{SQUARED TIMES}"),
            "Cap"             : symbol(u"\N{DOUBLE INTERSECTION}"),
            "centerdot"       : symbol(u"\N{MIDDLE DOT}"),
            "circledast"      : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
            "circledcirc"     : symbol(u"\N{CIRCLED RING OPERATOR}"),
            "circleddash"     : symbol(u"\N{CIRCLED DASH}"),
            "Cup"             : symbol(u"\N{DOUBLE UNION}"),
            "curlyvee"        : symbol(u"\N{CURLY LOGICAL OR}"),
            "curlywedge"      : symbol(u"\N{CURLY LOGICAL AND}"),
            "divideontimes"   : symbol(u"\N{DIVISION TIMES}"),
            "dotplus"         : symbol(u"\N{DOT PLUS}"),
            "doublebarwedge"  : symbol(u"\N{PERSPECTIVE}"),
            "intercal"        : symbol(u"\N{INTERCALATE}"),
            "leftthreetimes"  : symbol(u"\N{LEFT SEMIDIRECT PRODUCT}"),
            "ltimes"          : symbol(u"\N{LEFT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
            "rightthreetimes" : symbol(u"\N{RIGHT SEMIDIRECT PRODUCT}"),
            "rtimes"          : symbol(u"\N{RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT}"),
            "smallsetminus"   : symbol(u"\N{SET MINUS}"),
            "veebar"          : symbol(u"\N{XOR}"),

            #Table 65: mathdesign Variable-sized Math Operators
            "intclockwise "    : symbol(u"\N{CLOCKWISE INTEGRAL}"),
            "oiiint"           : symbol(u"\N{VOLUME INTEGRAL}"),
            "oiint"            : symbol(u"\N{SURFACE INTEGRAL}"),
            "ointclockwise"    : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
            "ointctrclockwise" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),
        }


class shuffle:
    math_commands = {
        #Table 53: shuffle Binary Operators
        "cshuffle" : symbol(),
        "shuffle"  : symbol(),
    }


class ulsy:
    math_commands = {
        #Table 54: ulsy Geometric Binary Operators
        "odplus" : symbol(),
    }


class mathabx:
    math_commands = {
        #Table 55: mathabx Geometric Binary Operators
        "blacktriangledown"  : symbol(u"\N{Black Down-Pointing Small Triangle}"),
        "blacktriangleleft"  : symbol(u"\N{Black Left-Pointing Small Triangle}"),
        "blacktriangleright" : symbol(u"\N{Black Right-Pointing Small Triangle}"),
        "blacktriangleup"    : symbol(u"\N{Black Up-Pointing Small Triangle}"),
        "boxasterisk"        : symbol(u"\N{SQUARED ASTERISK}"),
        "boxbackslash"       : symbol(u"\N{SQUARED FALLING DIAGONAL SLASH}"),
        "boxbot"             : symbol(),
        "boxcirc"            : symbol(u"\N{SQUARED SMALL CIRCLE}"),
        "boxcoasterisk"      : symbol(),
        "boxdiv"             : symbol(),
        "boxdot"             : symbol(u"\N{SQUARED DOT OPERATOR}"),
        "boxleft"            : symbol(),
        "boxminus"           : symbol(u"\N{SQUARED MINUS}"),
        "boxplus"            : symbol(u"\N{SQUARED PLUS}"),
        "boxright"           : symbol(),
        "boxslash"           : symbol(u"\N{SQUARED RISING DIAGONAL SLASH}"),
        "boxtimes"           : symbol(u"\N{SQUARED TIMES}"),
        "boxtop"             : symbol(),
        "boxtriangleup"      : symbol(),
        "boxvoid"            : symbol(u"\N{WHITE MEDIUM SQUARE}"),
        "oasterisk"          : symbol(u"\N{CIRCLED ASTERISK OPERATOR}"),
        "obackslash"         : symbol(u"\N{CIRCLED REVERSE SOLIDUS}"),
        "obot"               : symbol(u"\N{up Tack}\{Combining Enclosing Circle}"),
        "ocirc"              : symbol(u"\N{CIRCLED RING OPERATOR}"),
        "ocoasterisk"        : symbol(),
        "odiv"               : symbol(u"\N{CIRCLED DIVISION SIGN}"),
        "odot"               : symbol(u"\N{CIRCLED DOT OPERATOR}"),
        "oleft"              : symbol(u"\N{Left Tack}\{Combining Enclosing Circle}"),
        "ominus"             : symbol(u"\N{CIRCLED MINUS}"),
        "oplus"              : symbol(u"\N{CIRCLED PLUS}"),
        "oright"             : symbol(u"\N{Right Tack}\{Combining Enclosing Circle}"),
        "oslash"             : symbol(u"\N{CIRCLED DIVISION SLASH}"),
        "otimes"             : symbol(u"\N{CIRCLED TIMES}"),
        "otop"               : symbol(u"\N{Down Tack}\{Combining Enclosing Circle}"),
        "otriangleup"        : symbol(u"\N{White Up-Pointing Triangle}\{Combining Enclosing Circle}"),
        "ovoid"              : symbol(u"\N{Medium White Circle}"),
        "smalltriangledown"  : symbol(u"\N{White Down-Pointing Small Triangle}"),
        "smalltriangleleft"  : symbol(u"\N{White Left-Pointing Small Triangle}"),
        "smalltriangleright" : symbol(u"\N{White Right-Pointing Small Triangle}"),
        "smalltriangleup"    : symbol(u"\N{White Up-Pointing Small Triangle}"),
    }



class esint:
    math_commands = {
        #Table 63: esint Variable-sized Math Operators
        "dotsint" : symbol(u"\N{INTEGRAL}\{MIDLINE HORIZONTAL ELLIPSIS}\N{INTEGRAL}"),
        "fint" : symbol(u"\N{INTEGRAL AVERAGE WITH SLASH}"),
        "iiiint" : symbol(u"\N{QUADRUPLE INTEGRAL OPERATOR}"),
        "iiint" : symbol(u"\N{TRIPLE INTEGRAL}"),
        "iint" : symbol(u"\N{DOUBLE INTEGRAL}"),
        "landdownint" : symbol(u"\N{INTEGRAL WITH UNION}"),
        "landupint" : symbol(u"\N{INTEGRAL WITH INTERSECTION}"),
        "oiint" : symbol(u"\N{SURFACE INTEGRAL}"),
        "ointclockwise" : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
        "ointctrclockwise" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),
        #"sqiint" : symbol(u"\N{}"),
        #"sqint" : symbol(u"\N{}"),
        "varoiint" : symbol(u"\N{SURFACE INTEGRAL}"),
        "varointclockwise" : symbol(u"\N{CLOCKWISE CONTOUR INTEGRAL}"),
        "varointctrclockwise" : symbol(u"\N{ANTICLOCKWISE CONTOUR INTEGRAL}"),

        
    }
